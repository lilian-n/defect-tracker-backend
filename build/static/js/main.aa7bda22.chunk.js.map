{"version":3,"sources":["images/bug-icon.png","app/schemas.js","services/projects.js","services/defects.js","app/features/defects/defectsSlice.js","app/features/projects/projectsSlice.js","services/users.js","app/features/users/usersSlice.js","services/comments.js","app/features/comments/commentsSlice.js","app/features/tokenSlice.js","app/authenticatedUserSlice.js","app/features/filterSlice.js","app/store.js","components/Footer.js","components/SignupButton.js","components/Hero.js","components/Loading.js","components/AdminNav.js","components/AssignedProjectNav.js","components/UnauthenticatedNav.js","components/UnassignedNav.js","components/LoginButton.js","components/LogoutButton.js","components/AuthenticationButton.js","components/AuthNav.js","rbac-rules.js","components/Can.js","components/Navbar.js","components/HomeContent.js","views/home.js","app/features/projects/AddProjectForm.js","components/tableIcons.js","app/features/projects/ProjectTable.js","app/features/projects/ProjectList.js","views/projects.js","app/features/defects/DefectFilter.js","app/features/defects/DefectTable.js","app/features/defects/AddDefectForm.js","app/features/defects/AdminDefectList.js","app/features/defects/SingleProjectDefectList.js","views/defects.js","app/features/users/UserTable.js","views/users.js","auth/ProtectedRoute.js","app/features/defects/EditDefectForm.js","app/features/defects/SingleDefect.js","app/features/projects/EditProjectForm.js","app/features/projects/SingleProject.js","app/features/users/UserSignUpForm.js","App.js","auth/Auth0ProviderWithHistory.js","index.js"],"names":["module","exports","projectSchema","schema","Entity","userSchema","defectSchema","commentSchema","define","defects","users","comments","baseUrl","getToken","store","getState","token","getAll","a","config","headers","Authorization","axios","get","create","newObject","post","update","id","put","remove","delete","projectId","defectsAdapter","createEntityAdapter","fetchAllDefects","createAsyncThunk","defectService","response","normalized","normalize","data","entities","fetchDefectsByProject","fetchDefect","addNewDefect","newDefect","defectToAdd","updateDefect","updateValues","rejectWithValue","deleteDefect","values","defectsSlice","createSlice","name","initialState","getInitialState","status","error","reducers","extraReducers","pending","state","action","fulfilled","setAll","payload","rejected","message","upsertMany","addOne","upsertOne","removeOne","console","log","getSelectors","selectDefectById","selectById","projectsAdapter","selectIds","selectEntities","selectAll","selectTotal","fetchAllProjects","projectService","addNewProject","newProject","updateProject","projectsSlice","projects","concat","defectId","filter","selectProjectById","selectAllProjects","selectDefectsByProjectId","createSelector","ids","map","project","Object","keys","d","defect","includes","getAuthenticatedUser","usersAdapter","fetchAllUsers","userService","addNewUser","newUser","usersSlice","selectAllUsers","process","commentsAdapter","fetchCommentsByDefect","commentsService","commentsSlice","tokenSlice","addToken","actions","fetchAuthenticatedUser","authenticatedUserSlice","role","filterSlice","changeFilter","configureStore","reducer","tokenReducer","authUser","authUserReducer","projectsReducer","usersReducer","defectsReducer","commentsReducer","Footer","className","SignupButton","loginWithRedirect","useAuth0","onClick","screen_hint","Hero","content","isAuthenticated","src","logo","alt","width","Loading","AdminNav","to","exact","activeClassName","AssignedProjectNav","UnauthenticatedNav","UnassignedNav","LoginButton","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","AuthNav","rules","static","dynamic","userProjectId","defectProjectId","userId","authorId","identifierId","assignedDevId","Can","props","permissions","staticPermissions","dynamicPermissions","permissionCondition","check","perform","yes","no","defaultProps","Navbar","useSelector","HomeContent","icon","faLink","HomePage","Home","AddProjectForm","open","setOpen","dispatch","useDispatch","useState","title","setTitle","description","setDescription","Date","startDate","setStartDate","targetEndDate","setTargetEndDate","addProject","event","preventDefault","handleClose","Dialog","onClose","aria-labelledby","onSubmit","DialogTitle","DialogContent","Grid","container","spacing","item","xs","TextField","required","label","value","onChange","e","target","fullWidth","utils","DateFnsUtils","disableToolbar","variant","format","margin","date","KeyboardButtonProps","DialogActions","color","type","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","ProjectTable","icons","columns","field","render","rowData","maxWidth","ProjectList","mutableProjects","_","cloneDeep","formOpen","setFormOpen","justify","Button","size","style","height","Projects","assignedProject","DefectFilter","setValue","FormControl","InputLabel","Select","labelId","MenuItem","p","key","DefectTable","projectTitle","options","pageSize","AddDefectForm","summary","setSummary","priority","setPriority","dateIdentified","setDateIdentified","targetResDate","setTargetResDate","autoFocus","multiline","sm","clearable","shrink","AdminDefectList","mutableDefects","useEffect","defectFormOpen","setDefectFormOpen","Typography","gutterBottom","SingleProjectDefectList","getAccessTokenSilently","then","Defects","UserTable","Users","mutableUsers","ProtectedRoute","component","args","withAuthenticationRequired","onRedirecting","useStyles","makeStyles","theme","root","EditDefectForm","readOnly","setReadOnly","identifier","dev","classes","fieldUsers","devObject","assignedDev","setAssignedDev","setStatus","actualResolutionDate","actualResDate","setActualResDate","progress","setProgress","md","InputProps","placeholder","inputProps","Autocomplete","marginTop","newValue","getOptionLabel","option","getOptionSelected","renderInput","params","disabled","padding","display","targetResolutionDate","Defect","useParams","history","useHistory","Number","defectStatus","defectError","userStatus","showWhenReadOnly","handleReadOnly","handleDelete","deleteInfo","push","find","user","Fab","aria-label","defectProject","EditProjectForm","actualEndDate","setActualEndDate","disableUnderline","Project","u","projectStatus","SingleProject","authStatus","SignUpForm","setName","occupation","setOccupation","disableBackdropClick","disableEscapeKeyDown","newValues","email","DialogContentText","InputLabelProps","UserSignUpForm","App","isLoading","path","SingleDefect","Auth0ProviderWithHistory","children","domain","clientId","redirectUri","onRedirectCallback","appState","pathname","audience","ReactDOM","document","getElementById"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,sC,wNCE9BC,EAAgB,IAAIC,IAAOC,OAAO,WAAY,IAC9CC,EAAa,IAAIF,IAAOC,OAAO,QAAS,IACxCE,EAAe,IAAIH,IAAOC,OAAO,UAAW,IAC5CG,EAAgB,IAAIJ,IAAOC,OAAO,WAAY,IAE3DF,EAAcM,OAAO,CACnBC,QAAS,CAACH,GACVI,MAAO,CAACL,KAGVC,EAAaE,OAAO,CAClBG,SAAU,CAACJ,K,6BCVPK,EAAU,gBAEVC,EAAW,WAEf,OADcC,GAAMC,WACPC,OAmCA,GACbC,OAjCU,uCAAG,8BAAAC,EAAA,6DACPF,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAHzB,kBAKNM,IAAMC,IAAIX,EAASO,IALb,2CAAH,qDAkCVK,OA1Ba,SAAAC,GACb,IAAMT,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMI,KAAKd,EAASa,EAAWN,IAsBtCQ,OAnBa,SAACC,EAAIH,GAClB,IAAMT,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMO,IAAN,UAAajB,EAAb,YAAwBgB,GAAMH,EAAWN,IAehDW,OAZa,SAACF,GACd,IAAMZ,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMS,OAAN,UAAgBnB,EAAhB,YAA2BgB,GAAMT,K,SClCpCN,EAAW,WAEf,OADcC,GAAMC,WACPC,OAmDA,EAhDA,WACb,IAAMA,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMC,IAZC,eAYYJ,IA2Cb,EAxCC,SAACS,GACf,IAAMZ,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMC,IAAN,UApBO,eAoBP,YAAwBK,GAAMT,IAmCxB,EAhCM,SAACa,GACpB,IAAMhB,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMC,IAAN,UA5BO,eA4BP,+BAA2CS,GAAab,IA2BlD,EAxBA,SAAAM,GACb,IAAMT,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMI,KApCC,eAoCaD,EAAWN,IAmBzB,EAhBA,SAACS,EAAIH,GAClB,IAAMT,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMO,IAAN,UA5CO,eA4CP,YAAwBD,GAAMH,EAAWN,IAWnC,EARA,SAACS,GACd,IAAMZ,EAAQH,IACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMS,OAAN,UApDO,eAoDP,YAA2BH,GAAMT,IC5CpCc,EAAiBC,cAEVC,EAAkBC,YAC7B,mBAD6C,sBAE7C,8BAAAlB,EAAA,sEACyBmB,IADzB,cACQC,EADR,OAEQC,EAAaC,YAAUF,EAASG,KAAM,CAACnC,IAF/C,kBAGSiC,EAAWG,UAHpB,4CAOWC,EAAwBP,YACnC,yBADmD,uCAEnD,WAAOJ,GAAP,iBAAAd,EAAA,sEACyBmB,EAA2BL,GADpD,cACQM,EADR,OAEQC,EAAaC,YAAUF,EAASG,KAAM,CAACnC,IAF/C,kBAGSiC,EAAWG,UAHpB,2CAFmD,uDAUxCE,EAAcR,YACzB,oBADyC,uCAEzC,WAAOR,GAAP,iBAAAV,EAAA,sEACyBmB,EAAsBT,GAD/C,cACQU,EADR,OAEQC,EAAaC,YAAUF,EAASG,KAAMnC,GAF9C,kBAGSiC,EAAWG,UAHpB,2CAFyC,uDAS9BG,EAAeT,YAC1B,cAD0C,uCAE1C,WAAOU,GAAP,iBAAA5B,EAAA,sEACyBmB,EAAqBS,GAD9C,cACQR,EADR,OAEQS,EAFR,2BAGOT,EAASG,MAHhB,IAII9B,SAAU,KAJd,kBAMSoC,GANT,2CAF0C,uDAY/BC,EAAeZ,YAC1B,iBAD0C,uCAE1C,WAAOa,EAAP,sBAAA/B,EAAA,6DAAuBgC,EAAvB,EAAuBA,gBACbtB,EAAOqB,EAAPrB,GADV,kBAG2BS,EAAqBT,EAAIqB,GAHpD,cAGUX,EAHV,yBAIWA,EAASG,MAJpB,yDAMWS,EAAgB,KAAMZ,SAASG,OAN1C,yDAF0C,yDAa/BU,EAAef,YAC1B,iBAD0C,uCAE1C,WAAOgB,GAAP,SAAAlC,EAAA,sEACQmB,EAAqBe,EAAOxB,IADpC,gCAESwB,GAFT,2CAF0C,uDAwD7BC,EAhDMC,YAAY,CAC/BC,KAAM,UACNC,aAAcvB,EAAewB,gBAAgB,CAC3CC,OAAQ,OACRC,MAAO,OAETC,SAAU,GACVC,eAAa,mBACV1B,EAAgB2B,SAAU,SAACC,EAAOC,GACjCD,EAAML,OAAS,aAFN,cAIVvB,EAAgB8B,WAAY,SAACF,EAAOC,GACnCD,EAAML,OAAS,YACfzB,EAAeiC,OAAOH,EAAOC,EAAOG,QAAQ1D,YANnC,cAQV0B,EAAgBiC,UAAW,SAACL,EAAOC,GAClCD,EAAML,OAAS,SACfK,EAAMJ,MAAQK,EAAOL,MAAMU,WAVlB,cAYV1B,EAAsBsB,WAAY,SAACF,EAAOC,GACrCA,EAAOG,QAAQ1D,SACjBwB,EAAeqC,WAAWP,EAAOC,EAAOG,QAAQ1D,YAdzC,cAiBVmC,EAAYkB,SAAU,SAACC,EAAOC,GAC7BD,EAAML,OAAS,aAlBN,cAoBVd,EAAYqB,WAAY,SAACF,EAAOC,GAC/BD,EAAML,OAAS,YACfzB,EAAeqC,WAAWP,EAAOC,EAAOG,QAAQ1D,YAtBvC,cAwBVmC,EAAYwB,UAAW,SAACL,EAAOC,GAC9BD,EAAML,OAAS,SACfK,EAAMJ,MAAQK,EAAOL,MAAMU,WA1BlB,cA4BVxB,EAAaoB,WAAY,SAACF,EAAOC,GAChC/B,EAAesC,OAAOR,EAAOC,EAAOG,YA7B3B,cA+BVnB,EAAaiB,WAAY,SAACF,EAAOC,GAChC/B,EAAeuC,UAAUT,EAAOC,EAAOG,YAhC9B,cAkCVhB,EAAac,WAAY,SAACF,EAAOC,GAChC/B,EAAewC,UAAUV,EAAOC,EAAOG,QAAQvC,IAC/C8C,QAAQC,IAAI,iBAAkBX,EAAOG,YApC5B,KAyCf,Q,EAQIlC,EAAe2C,cAAa,SAAAb,GAAK,OAAIA,EAAMtD,WALjCoE,E,EAAZC,WClHIC,G,EDmHJC,U,EACAC,e,EACAC,U,EACAC,YCtHsBjD,eAEXkD,EAAmBhD,YAC9B,oBAD8C,sBAE9C,8BAAAlB,EAAA,sEACyBmE,EAAepE,SADxC,cACQqB,EADR,OAEQC,EAAaC,YAAUF,EAASG,KAAM,CAACvC,IAF/C,kBAGSqC,EAAWG,UAHpB,4CAOW4C,EAAgBlD,YAC3B,eAD2C,uCAE3C,WAAOmD,GAAP,eAAArE,EAAA,sEACyBmE,EAAe7D,OAAO+D,GAD/C,cACQjD,EADR,yBAESA,EAASG,MAFlB,2CAF2C,uDAQhC+C,EAAgBpD,YAC3B,kBAD2C,uCAE3C,WAAOa,EAAP,sBAAA/B,EAAA,6DAAuBgC,EAAvB,EAAuBA,gBACbtB,EAAOqB,EAAPrB,GADV,kBAG2ByD,EAAe1D,OAAOC,EAAIqB,GAHrD,cAGUX,EAHV,yBAIWA,EAASG,MAJpB,yDAMWS,EAAgB,KAAMZ,SAASG,OAN1C,yDAF2C,yDAmD9BgD,EAtCOnC,YAAY,CAChCC,KAAM,WACNC,aAAcuB,EAAgBtB,gBAAgB,CAC5CC,OAAQ,OACRC,MAAO,OAETC,SAAU,GACVC,eAAa,mBACVuB,EAAiBtB,SAAU,SAACC,EAAOC,GAClCD,EAAML,OAAS,aAFN,cAIV0B,EAAiBnB,WAAY,SAACF,EAAOC,GACpCD,EAAML,OAAS,YACfqB,EAAgBb,OAAOH,EAAOC,EAAOG,QAAQuB,aANpC,cAQVN,EAAiBhB,UAAW,SAACL,EAAOC,GACnCD,EAAML,OAAS,SACfK,EAAMJ,MAAQK,EAAOL,MAAMU,WAVlB,cAYViB,EAAcrB,WAAY,SAACF,EAAOC,GACjCD,EAAMtB,KAAOsB,EAAMtB,KAAKkD,OAAO3B,EAAOG,YAb7B,cAeVqB,EAAcvB,WAAY,SAACF,EAAOC,GACjCe,EAAgBP,UAAUT,EAAOC,EAAOG,YAhB/B,cAkBVtB,EAAaoB,WAAY,SAACF,EAAOC,GAChC,IAAMpC,EAAKoC,EAAOG,QAAQnC,UACpB4D,EAAW5B,EAAOG,QAAQvC,GAChCmC,EAAMrB,SAASd,GAAInB,QAAUsD,EAAMrB,SAASd,GAAInB,QAAQkF,OAAOC,MArBtD,cAuBVzC,EAAac,WAAY,SAACF,EAAOC,GAChC,IAAMpC,EAAKoC,EAAOG,QAAQnC,UACpB4D,EAAW5B,EAAOG,QAAQnC,UAChC+B,EAAMrB,SAASd,GAAInB,QAAUsD,EAAMrB,SAASd,GAAInB,QAAQoF,QAAO,SAAAjE,GAAE,OAAIA,IAAOgE,QA1BnE,KA+Bf,Q,EAQIb,EAAgBH,cAAa,SAAAb,GAAK,OAAIA,EAAM2B,YALlCI,E,EAAZhB,WAGWiB,G,EAFXf,U,EACAC,e,EACAC,WAIWc,G,EAHXb,YAGsC,SAAAnD,GAAS,OAC/CiE,YACE,CACE,SAAAlC,GAAK,OAAI+B,EAAkB/B,EAAO/B,IAClC,SAAA+B,GAAK,OAAIA,EAAMtD,QAAQyF,IAAIC,KAAI,SAAAvE,GAAE,OAAImC,EAAMtD,QAAQiC,SAASd,SAE9D,SAACwE,EAAS3F,GACR,OAAK2F,EAGEC,OAAOC,KAAK7F,GAChB0F,KAAI,SAAAI,GAAC,OAAI9F,EAAQ8F,MACjBV,QAAO,SAAAW,GAAM,OAAIJ,EAAQ3F,QAAQgG,SAASD,EAAO5E,OAJ3C,QC9FTf,GAAW,WAEf,OADcC,GAAMC,WACPC,OA2BA,IACbC,OAzBU,uCAAG,8BAAAC,EAAA,6DACPF,EAAQH,KACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAHzB,kBAKNM,IAAMC,IAZC,aAYYJ,IALb,2CAAH,qDA0BVuF,qBAlBwB,uCAAG,8BAAAxF,EAAA,6DACrBF,EAAQH,KACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAHX,kBAKpBM,IAAMC,IAAN,UApBO,aAoBP,sBAA0CJ,IALtB,2CAAH,qDAmBxBK,OAXa,SAAAC,GACb,IAAMT,EAAQH,KACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMI,KA5BC,aA4BaD,EAAWN,KCrBlCwF,GAAezE,cAER0E,GAAgBxE,YAC3B,iBAD2C,sBAE3C,8BAAAlB,EAAA,sEACyB2F,GAAY5F,SADrC,cACQqB,EADR,OAEQC,EAAaC,YAAUF,EAASG,KAAM,CAACpC,IAF/C,kBAGSkC,EAAWG,UAHpB,4CAOWoE,GAAa1E,YACxB,YADwC,uCAExC,WAAO2E,GAAP,eAAA7F,EAAA,sEACyB2F,GAAYrF,OAAOuF,GAD5C,cACQzE,EADR,OAEEoC,QAAQC,IAAI,gBAAiBrC,EAASG,MAFxC,kBAGSH,EAASG,MAHlB,2CAFwC,uDAiC3BuE,GAxBI1D,YAAY,CAC7BC,KAAM,QACNC,aAAcmD,GAAalD,gBAAgB,CACzCC,OAAQ,SAEVE,SAAU,GACVC,eAAa,mBACV+C,GAAc9C,SAAU,SAACC,EAAOC,GAC/BD,EAAML,OAAS,aAFN,cAIVkD,GAAc3C,WAAY,SAACF,EAAOC,GACjCD,EAAML,OAAS,YACfiD,GAAazC,OAAOH,EAAOC,EAAOG,QAAQzD,UANjC,cAQVkG,GAAcxC,UAAW,SAACL,EAAOC,GAChCD,EAAML,OAAS,SACfK,EAAMJ,MAAQK,EAAOL,MAAMU,WAVlB,cAYVyC,GAAW7C,WAAY,SAACF,EAAOC,GAC9B2C,GAAapC,OAAOR,EAAOC,EAAOG,YAbzB,KAkBf,Q,GAQIwC,GAAa/B,cAAa,SAAAb,GAAK,OAAIA,EAAMrD,SAFhCuG,I,GAHXnC,W,GACAE,U,GACAC,e,GACAC,WCzDItE,I,GD0DJuE,YC1DW,UAAM+B,wBAAN,kBAEPrG,GAAW,WAEf,OADcC,GAAMC,WACPC,OAmCA,GAhBO,SAAC4E,GACrB,IAAM5E,EAAQH,KACRM,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAEtC,OAAOM,IAAMC,IAAN,UAAaX,GAAb,mBAA+BgF,GAAYzE,ICxB9CgG,GAAkBjF,cAEXkF,GAAwBhF,YACnC,yBADmD,uCAEnD,WAAOwD,GAAP,eAAA1E,EAAA,sEACyBmG,GAA8BzB,GADvD,cACQtD,EADR,yBAESA,EAASG,MAFlB,2CAFmD,uDAmBtC6E,GAXOhE,YAAY,CAChCC,KAAM,WACNC,aAAc2D,GAAgB1D,kBAC9BG,SAAU,GACVC,cAAc,eACXuD,GAAsBnD,WAAY,SAACF,EAAOC,GACzCmD,GAAgB7C,WAAWP,EAAOC,EAAOG,cAK/C,Q,GAQIgD,GAAgBvC,cAAa,SAAAb,GAAK,OAAIA,EAAMpD,YClC1C4G,I,GD6BJzC,W,GACAE,U,GACAC,e,GACAC,U,GACAC,YCjCiB7B,YAAY,CAC7BC,KAAM,QACNC,aAAc,GACdI,SAAU,CACR4D,SADQ,SACCzD,EAAOC,GACd,OAAOA,EAAOG,aAKLqD,GAAaD,GAAWE,QAAxBD,SAEAD,MAAf,QCHaG,GAAyBtF,YACpC,0BADoD,sBAEpD,4BAAAlB,EAAA,sEACyB2F,GAAYH,uBADrC,cACQpE,EADR,yBAESA,EAASG,MAFlB,4CA0BakF,GApBgBrE,YAAY,CACzCC,KAAM,WACNC,aAhBmB,CACnBf,KAAM,GACNiB,OAAQ,GACRC,MAAO,MAcPE,eAAa,mBACV6D,GAAuB5D,SAAU,SAACC,EAAOC,GACxCD,EAAML,OAAS,aAFN,cAIVgE,GAAuBzD,WAAY,SAACF,EAAOC,GAC1C,IAAMvB,EAAOuB,EAAOG,QAAUH,EAAOG,QAAU,CAAEyD,KAAM,cAEvD7D,EAAML,OAAS,YACfK,EAAMtB,KAAOA,KARJ,cAUViF,GAAuBtD,UAAW,SAACL,EAAOC,GACzCD,EAAML,OAAS,SACfK,EAAMJ,MAAQK,EAAOL,MAAMU,WAZlB,KAiBf,QCrCMwD,GAAcvE,YAAY,CAC9BC,KAAM,SACNC,aAAc,OACdI,SAAU,CACRkE,aADQ,SACK/D,EAAOC,GAClB,OAAOA,EAAOG,YAKL2D,GAAiBD,GAAYJ,QAA7BK,aAEAD,MAAf,QCJeE,eAAe,CAC5BC,QAAS,CACPhH,MAAOiH,GACPC,SAAUC,GACVtC,OAAQgC,GACRnC,SAAU0C,EACV1H,MAAO2H,GACP5H,QAAS6H,EACT3H,SAAU4H,M,2BCRCC,GARA,kBACb,4BAAQC,UAAU,4BAChB,8C,qBCeWC,GAhBM,WAAO,IAClBC,EAAsBC,eAAtBD,kBACR,OACE,4BACEF,UAAU,yBACVI,QAAS,kBACPF,EAAkB,CAChBG,YAAa,aAJnB,YCmBWC,GAnBF,WAAO,IAGdC,EAFwBJ,eAApBK,gBAGJ,8BACA,kBAAC,GAAD,MAEJ,OACE,yBAAKR,UAAU,oBACb,yBAAKA,UAAU,gBAAgBS,IAAKC,KAAMC,IAAI,aAAaC,MAAM,SACjE,wBAAIZ,UAAU,QAAd,0BACA,uBAAGA,UAAU,aAAb,2EAGCO,ICVQM,GANC,kBACd,yBAAKb,UAAU,WACb,yBAAKS,IAJP,mEAIwBE,IAAI,iB,SCmCfG,GAtCE,kBACf,yBAAKd,UAAU,sBACb,kBAAC,KAAD,CACEe,GAAG,IACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,QAQA,kBAAC,KAAD,CACEF,GAAG,YACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,YAQA,kBAAC,KAAD,CACEF,GAAG,SACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,SAQA,kBAAC,KAAD,CACEF,GAAG,WACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,aCGWC,GA7BY,kBACzB,yBAAKlB,UAAU,sBACb,kBAAC,KAAD,CACEe,GAAG,IACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,QAQA,kBAAC,KAAD,CACEF,GAAG,YACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,oBAQA,kBAAC,KAAD,CACEF,GAAG,WACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,aCLWE,GAbY,kBACzB,yBAAKnB,UAAU,sBACb,kBAAC,KAAD,CACEe,GAAG,IACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,UCoBWG,GAtBO,kBACpB,yBAAKpB,UAAU,sBACb,kBAAC,KAAD,CACEe,GAAG,IACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,QAQA,kBAAC,KAAD,CACEF,GAAG,UACHC,OAAK,EACLhB,UAAU,WACViB,gBAAgB,4BAJlB,aCGWI,GAbK,WAAO,IACjBnB,EAAsBC,eAAtBD,kBAER,OACE,4BACEF,UAAU,kBACVI,QAAS,kBAAMF,MAFjB,WCYWoB,GAhBM,WAAO,IAClBC,EAAWpB,eAAXoB,OACR,OACE,4BACEvB,UAAU,iBACVI,QAAS,kBACPmB,EAAO,CACLC,SAAUC,OAAOC,SAASC,WAJhC,YCOWC,GANc,WAG3B,OAF4BzB,eAApBK,gBAEiB,kBAAC,GAAD,MAAmB,kBAAC,GAAD,OCD/BqB,GANC,kBACd,yBAAK7B,UAAU,sBACb,kBAAC,GAAD,QCwHW8B,GA7HD,CACZ,QAAW,CACTC,OAAQ,CACN,kBACA,qBAGJ,WAAc,CACZA,OAAQ,CACN,kBACA,sBACA,iBAGJ,MAAS,CACPA,OAAQ,CACN,kBACA,gBACA,mBACA,kBACA,kBACA,gBACA,aACA,gBACA,eACA,aACA,eACA,qBACA,kBACA,iBACA,eACA,oBACA,iBACA,gBACA,kBACA,gBACA,kBACA,6BACA,oBAGJ,eAAgB,CACdA,OAAQ,CACN,4BACA,kBACA,6BACA,gCACA,gBACA,kBACA,mBAEFC,QAAS,CACP,mBAAoB,YAAmC,IAAhCzI,EAA+B,EAA/BA,UAAW0I,EAAoB,EAApBA,cAChC,SAAK1I,IAAc0I,IACZ1I,IAAc0I,GAEvB,kBAAmB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACrC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,iBAAkB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACpC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,eAAgB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cAClC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,oBAAqB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACvC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,iBAAkB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACpC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,gBAAiB,YAA2B,IAAxBE,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC1B,SAAKD,IAAWC,IACTD,IAAWC,KAIxB,iBAAkB,CAChBL,OAAQ,CACN,8BACA,kBACA,6BACA,gCACA,gBACA,mBAEFC,QAAS,CACP,mBAAoB,YAAmC,IAAhCzI,EAA+B,EAA/BA,UAAW0I,EAAoB,EAApBA,cAChC,SAAK1I,IAAc0I,IACZ1I,IAAc0I,GAEvB,gCAAiC,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACnD,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,kBAAmB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACrC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,iBAAkB,YAAyC,IAAtCC,EAAqC,EAArCA,gBAAiBD,EAAoB,EAApBA,cACpC,SAAKC,IAAoBD,IAClBC,IAAoBD,GAE7B,8BAA+B,YAA8C,IAA3CE,EAA0C,EAA1CA,OAAQE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACtD,SAAKH,IAAWE,KACZF,IAAWG,GACRH,IAAWE,IAEpB,gBAAiB,YAA2B,IAAxBF,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC1B,SAAKD,IAAWC,IACTD,IAAWC,GAEpB,kBAAmB,YAA2B,IAAxBD,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5B,SAAKD,IAAWC,IACTD,IAAWC,MC5FpBG,GAAM,SAAAC,GACV,IAAIrD,EAAOqD,EAAMrD,KAAOqD,EAAMrD,KAAO,UAErC,OA5BY,SAAC2C,EAAO3C,EAAM5D,EAAQvB,GAClC,IAAMyI,EAAcX,EAAM3C,GAC1B,IAAKsD,EACH,OAAO,EAGT,IAAMC,EAAoBD,EAAYV,OAEtC,GAAIW,GAAqBA,EAAkB1E,SAASzC,GAClD,OAAO,EAGT,IAAMoH,EAAqBF,EAAYT,QAEvC,GAAIW,EAAoB,CACtB,IAAMC,EAAsBD,EAAmBpH,GAC/C,QAAKqH,GAGEA,EAAoB5I,GAG7B,OAAO,EAOL6I,CAAMf,GAAO3C,EAAMqD,EAAMM,QAASN,EAAMxI,MACpCwI,EAAMO,MACNP,EAAMQ,MAIdT,GAAIU,aAAe,CACjBF,IAAK,kBAAM,MACXC,GAAI,kBAAM,OAGGT,UCEAW,GAlCA,WACb,IAAMzD,EAAW0D,cAAY,SAAA7H,GAAK,OAAIA,EAAMmE,SAASzF,QAErD,OACE,yBAAKgG,UAAU,sBACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,aACb,kBAAC,GAAD,CACEb,KAAMM,EAASN,KACf2D,QAAQ,kBACRC,IAAK,kBAAM,kBAAC,GAAD,SAEb,kBAAC,GAAD,CACE5D,KAAMM,EAASN,KACf2D,QAAQ,6BACRC,IAAK,kBAAM,kBAAC,GAAD,SAEb,kBAAC,GAAD,CACE5D,KAAMM,EAASN,KACf2D,QAAQ,mBACRC,IAAK,kBAAM,kBAAC,GAAD,SAEb,kBAAC,GAAD,CACE5D,KAAMM,EAASN,KACf2D,QAAQ,sBACRC,IAAK,kBAAM,kBAAC,GAAD,SAEb,kBAAC,GAAD,U,oBCoBKK,GApDK,kBAClB,yBAAKpD,UAAU,wBACb,wBAAIA,UAAU,oBAAd,0BAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,QAAd,iBAGA,iPAOF,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,QACZ,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAiBqD,KAAMC,KAAQtD,UAAU,SAD3C,iBAKF,uFACA,2BAAG,wCAAH,iBACA,4OAOF,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,QACZ,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAiBqD,KAAMC,KAAQtD,UAAU,SAD3C,mBAKF,yFACA,2BAAG,wCAAH,mBACA,gOCtCFuD,GAAW,kBACf,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,6BACA,kBAAC,GAAD,QAoBWC,GAhBF,WACX,IAAM/D,EAAW0D,cAAY,qBAAG1D,SAAwBzF,QAExD,MAAsB,eAAlByF,EAASN,KACJ,kBAAC,KAAD,CAAU4B,GAAG,YAIpB,kBAAC,GAAD,CACE5B,KAAMM,EAASN,KACf2D,QAAQ,kBACRC,IAAK,kBAAM,kBAAC,GAAD,U,0IC6GFU,GApHQ,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxBC,EAAWC,eAD2B,EAGlBC,mBAAS,IAHS,oBAGrCC,EAHqC,KAG9BC,EAH8B,OAINF,mBAAS,IAJH,oBAIrCG,EAJqC,KAIxBC,EAJwB,OAKVJ,mBAAS,IAAIK,MALH,oBAKrCC,EALqC,KAK1BC,EAL0B,OAMFP,mBAAS,IAAIK,MANX,oBAMrCG,EANqC,KAMtBC,EANsB,KAQtCC,EAAU,uCAAG,WAAOC,GAAP,SAAAhM,EAAA,sDACjBgM,EAAMC,iBAQNd,EAAS/G,EANS,CAChBkH,QACAE,cACAG,YACAE,mBAIFN,EAAS,IACTE,EAAe,IACfG,EAAa,IAAIF,MACjBI,EAAiB,IAAIJ,MACrBR,GAAQ,GAfS,2CAAH,sDAkBVgB,EAAc,WAClBhB,GAAQ,IAGV,OACE,6BACE,kBAACiB,GAAA,EAAD,CAAQlB,KAAMA,EAAMmB,QAASF,EAAaG,kBAAgB,qBACxD,0BAAMC,SAAUP,GACd,kBAACQ,GAAA,EAAD,CAAa7L,GAAG,qBAAhB,mBACA,kBAAC8L,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRrM,GAAG,QACHsM,MAAM,QACNC,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAI5B,EAAS4B,EAAEC,OAAOH,QACjCI,WAAS,KAGb,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRrM,GAAG,qBACHsM,MAAM,cACNC,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAI1B,EAAe0B,EAAEC,OAAOH,QACvCI,WAAS,KAGb,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,KAAD,CAAyBS,MAAOC,YAC9B,kBAAC,KAAD,CACER,UAAQ,EACRC,MAAM,aACNQ,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACPC,OAAO,SACPjN,GAAG,iBACHuM,MAAOtB,EACPuB,SAAU,SAAAU,GAAI,OAAIhC,EAAagC,IAC/BP,WAAS,EACTQ,oBAAqB,CACnB,aAAc,mBAKtB,kBAACpB,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,KAAD,CAAyBS,MAAOC,YAC9B,kBAAC,KAAD,CACER,UAAQ,EACRS,gBAAc,EACdR,MAAM,kBACNS,QAAQ,SACRC,OAAO,aACPC,OAAO,SACPjN,GAAG,qBACHuM,MAAOpB,EACPqB,SAAU,SAAAU,GAAI,OAAI9B,EAAiB8B,IACnCP,WAAS,EACTQ,oBAAqB,CACnB,aAAc,qBAO1B,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQnG,QAASuE,EAAa6B,MAAM,WAApC,UAGA,kBAAC,KAAD,CAAQC,KAAK,SAASD,MAAM,WAA5B,e,2KClFGE,GApBI,CACjBC,IAAKC,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACC,GAAA,EAAD,iBAAYtE,EAAZ,CAAmBqE,IAAKA,QACxDE,MAAOH,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACE,GAAA,EAAD,iBAAWvE,EAAX,CAAkBqE,IAAKA,QACzDG,MAAOJ,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACG,GAAA,EAAD,iBAAWxE,EAAX,CAAkBqE,IAAKA,QACzDI,OAAQL,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACK,GAAA,EAAD,iBAAmB1E,EAAnB,CAA0BqE,IAAKA,QAClEM,YAAaP,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACO,GAAA,EAAD,iBAAkB5E,EAAlB,CAAyBqE,IAAKA,QACtEQ,KAAMT,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACQ,GAAA,EAAD,iBAAU7E,EAAV,CAAiBqE,IAAKA,QACvDS,OAAQV,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACU,GAAA,EAAD,iBAAa/E,EAAb,CAAoBqE,IAAKA,QAC5DW,OAAQZ,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACY,GAAA,EAAD,iBAAgBjF,EAAhB,CAAuBqE,IAAKA,QAC/Da,UAAWd,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACa,GAAA,EAAD,iBAAelF,EAAf,CAAsBqE,IAAKA,QACjEc,SAAUf,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACc,GAAA,EAAD,iBAAcnF,EAAd,CAAqBqE,IAAKA,QAC/De,SAAUhB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACO,GAAA,EAAD,iBAAkB5E,EAAlB,CAAyBqE,IAAKA,QACnEgB,aAAcjB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACiB,GAAA,EAAD,iBAAiBtF,EAAjB,CAAwBqE,IAAKA,QACtEkB,YAAanB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACG,GAAA,EAAD,iBAAWxE,EAAX,CAAkBqE,IAAKA,QAC/DmB,OAAQpB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACmB,GAAA,EAAD,iBAAYxF,EAAZ,CAAmBqE,IAAKA,QAC3DoB,UAAWrB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACqB,GAAA,EAAD,iBAAmB1F,EAAnB,CAA0BqE,IAAKA,QACrEsB,gBAAiBvB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACuB,GAAA,EAAD,iBAAY5F,EAAZ,CAAmBqE,IAAKA,QACpEwB,WAAYzB,sBAAW,SAACpE,EAAOqE,GAAR,OAAgB,kBAACwB,GAAA,EAAD,iBAAgB7F,EAAhB,CAAuBqE,IAAKA,SCLtDyB,GAzBM,SAAC,GAAD,IAAGtO,EAAH,EAAGA,KAAH,OACnB,kBAAC,KAAD,CACE+J,MAAM,WACN/J,KAAMA,EACNuO,MAAO7B,GACP8B,QAAS,CACP,CACEzE,MAAO,KACP0E,MAAO,KACPC,OAAQ,SAAAC,GAAO,OAAI,kBAAC,KAAD,CAAM5H,GAAE,oBAAe4H,EAAQxP,KAAOwP,EAAQxP,KACjEyP,SAAU,IAEZ,CAAE7E,MAAO,QAAS0E,MAAO,QAASG,SAAU,KAC5C,CAAE7E,MAAO,cAAe0E,MAAO,eAC/B,CAAE1E,MAAO,aAAc0E,MAAO,YAAaG,SAAU,KACrD,CAAE7E,MAAO,kBAAmB0E,MAAO,gBAAiBG,SAAU,KAC9D,CAAE7E,MAAO,kBAAmB0E,MAAO,gBAAiBG,SAAU,SCmBrDC,GA/BK,WAClB,IAAM5L,EAAWkG,aAAY7F,GACvBwL,EAAkBC,KAAEC,UAAU/L,GAFZ,EAIQ6G,oBAAS,GAJjB,oBAIjBmF,EAJiB,KAIPC,EAJO,KAMxB,OACE,yBAAKlJ,UAAU,aACb,kBAACkF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACgE,QAAQ,WAAW7D,GAAI,IAC1C,kBAAC8D,GAAA,EAAD,CACElD,QAAQ,UACR9F,QAAS,kBAAM8I,GAAY,IAC3BG,KAAK,KACLC,MAAO,CAAEC,OAAQ,KAJnB,gBASF,kBAACrE,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACE5B,KAAMuF,EACNtF,QAASuF,IAEX,kBAAC,GAAD,CAAclP,KAAM8O,QCHfU,GAxBE,WACf,IAGIC,EAHEhK,EAAW0D,cAAY,qBAAG1D,SAAwBzF,QAoBxD,MAfmB,cAJAmJ,cAAY,qBAAG1D,SAAwBxE,YAKxDwO,EAAkBhK,EAASlG,WAI3BkQ,EACI,kBAAC,KAAD,CACA1I,GAAE,mBAAc0I,KAEhB,kBAAC,GAAD,CACAtK,KAAMM,EAASN,KACf2D,QAAQ,gBACRC,IAAK,kBAAM,kBAAC,GAAD,OACXC,GAAI,kBAAM,kF,iDCwBH0G,GAtCM,WAAO,IAAD,EACC5F,mBAAS,QADV,oBAClB4B,EADkB,KACXiE,EADW,KAEnB/F,EAAWC,eACX5G,EAAWkG,aAAY7F,GAO7B,OACE,kBAACsM,GAAA,EAAD,CAAa1D,QAAQ,WAAWoD,MAAO,CAAE,SAAY,MACnD,kBAACO,GAAA,EAAD,CAAY1Q,GAAG,wBAAf,kBACA,kBAAC2Q,GAAA,EAAD,CACEC,QAAQ,uBACRtE,MAAM,iBACNtM,GAAG,gBACHuM,MAAOA,EACPC,SAbe,SAAClB,GACpBb,EAASvE,GAAaoF,EAAMoB,OAAOH,QACnCiE,EAASlF,EAAMoB,OAAOH,SAalB,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,QACd,qCAGAzI,EAASS,KAAI,SAAAuM,GAAC,OACZ,kBAACD,GAAA,EAAD,CACEE,IAAKD,EAAE9Q,GACPuM,MAAOuE,EAAE9Q,IAER8Q,EAAElG,aCIFoG,GAvCK,SAAC,GAA4B,IAA1BnQ,EAAyB,EAAzBA,KAAMoQ,EAAmB,EAAnBA,aAC3B,OACE,kBAAC,KAAD,CACErG,MAAK,mBAAcqG,GACnBpQ,KAAMA,EACNuO,MAAO7B,GACP8B,QAAS,CACP,CACEzE,MAAO,KACP0E,MAAO,KACPC,OAAQ,SAAAC,GAAO,OAAI,kBAAC,KAAD,CAAM5H,GAAE,mBAAc4H,EAAQxP,KAAOwP,EAAQxP,KAChEyP,SAAU,IAEZ,CAAE7E,MAAO,SAAU0E,MAAO,SAAUG,SAAU,IAC9C,CAAE7E,MAAO,UAAW0E,MAAO,WAC3B,CAAE1E,MAAO,WAAY0E,MAAO,WAAYG,SAAU,IAClD,CACE7E,MAAO,aACP0E,MAAO,cAET,CACE1E,MAAO,qBACP0E,MAAO,eAET,CAAE1E,MAAO,kBAAmB0E,MAAO,iBAAkBG,SAAU,KAC/D,CAAE7E,MAAO,yBAA0B0E,MAAO,gBAAiBG,SAAU,MAEvEyB,QAAS,CACPC,SAAU,OC2HHC,GAtIO,SAAC,GAAgD,IAA9C7G,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASpK,EAA8B,EAA9BA,UAAW6Q,EAAmB,EAAnBA,aAC3CxG,EAAWC,eADmD,EAGtCC,mBAAS,IAH6B,oBAG7D0G,EAH6D,KAGpDC,EAHoD,OAI9B3G,mBAAS,IAJqB,oBAI7DG,EAJ6D,KAIhDC,EAJgD,OAKpCJ,mBAAS,IAL2B,oBAK7D4G,EAL6D,KAKnDC,EALmD,OAMxB7G,mBAAS,IAAIK,MANW,oBAM7DyG,EAN6D,KAM7CC,EAN6C,OAO1B/G,mBAAS,MAPiB,oBAO7DgH,EAP6D,KAO9CC,EAP8C,KAS9DpG,EAAc,WAClB8F,EAAW,IACXvG,EAAe,IACfyG,EAAY,IACZE,EAAkB,IAAI1G,MACtB4G,EAAiB,MACjBpH,GAAQ,IAwBV,OACE,6BACE,kBAACiB,GAAA,EAAD,CAAQlB,KAAMA,EAAMmB,QAASF,EAAamB,WAAS,EAAC8C,SAAS,KAAK9D,kBAAgB,oBAChF,0BAAMC,SAxBM,SAACN,GACjBA,EAAMC,iBAWNd,EAASxJ,EATS,CAChBoQ,UACAvG,cACAyG,WACAE,iBACAE,gBACAvR,eAIFkR,EAAW,IACXvG,EAAe,IACfyG,EAAY,IACZE,EAAkB,IAAI1G,MACtB4G,EAAiB,MACjBpH,GAAQ,KAOF,kBAACqB,GAAA,EAAD,CAAa7L,GAAG,oBAAmB,kDAAnC,IAA+DiR,GAC/D,kBAACnF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEyF,WAAS,EACT7R,GAAG,UACHsM,MAAM,UACNC,MAAO8E,EACP7E,SAAU,SAAClB,GAAD,OAAWgG,EAAWhG,EAAMoB,OAAOH,QAC7CI,WAAS,EACTN,UAAQ,KAGZ,kBAACN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEpM,GAAG,cACH8R,WAAS,EACTxF,MAAM,cACNC,MAAOzB,EACP6B,WAAS,EACTH,SAAU,SAACC,GAAD,OAAO1B,EAAe0B,EAAEC,OAAOH,WAG7C,kBAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI4F,GAAI,GACrB,kBAAC,KAAD,CAAyBnF,MAAOC,YAC9B,kBAAC,KAAD,CACEmF,WAAS,EACT1F,MAAM,kBACNU,OAAO,aACPT,MAAOkF,EACPjF,SAAU,SAAAU,GAAI,OAAIwE,EAAkBxE,IACpCC,oBAAqB,CACnB,aAAc,eAEhBR,WAAS,MAIf,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI4F,GAAI,GACrB,kBAAC,KAAD,CAAyBnF,MAAOC,YAC9B,kBAAC,KAAD,CACEmF,WAAS,EACT1F,MAAM,yBACNU,OAAO,aACPT,MAAOoF,EACPnF,SAAU,SAAAU,GAAI,OAAI0E,EAAiB1E,IACnCC,oBAAqB,CACnB,aAAc,eAEhBR,WAAS,MAIf,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACsE,GAAA,EAAD,CACE9D,WAAS,GAET,kBAAC+D,GAAA,EAAD,CAAYuB,QAAM,EAACjS,GAAG,wBAAtB,YAGA,kBAAC2Q,GAAA,EAAD,CACEC,QAAQ,uBACR5Q,GAAG,WACHuM,MAAOgF,EACP/E,SAAU,SAACC,GAAD,OAAO+E,EAAY/E,EAAEC,OAAOH,SAEtC,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,IAAhB,QACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,OAAhB,OACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,UAAhB,UACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,QAAhB,QACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,aAAhB,kBAMV,kBAACa,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQnG,QAASuE,EAAa6B,MAAM,WAApC,UAGA,kBAAC,KAAD,CAAQC,KAAK,SAASD,MAAM,WAA5B,eC/DG6E,GAxES,WACtB,IAAMzH,EAAWC,eAEXzG,EAAS+F,cAAY,qBAAG/F,UACxBO,EAAUwF,cAAY,SAAA7H,GAAK,OAAI+B,EAAkB/B,EAAO8B,MACxDpF,EAAUmL,aAAY5F,EAAyBH,IAC/CkO,EAAiBvC,KAAEC,UAAUhR,GAEnCuT,qBAAU,WACO,SAAXnO,GACFwG,EAAS1J,EAAsBkD,MAEhC,CAACA,EAAQwG,IAZgB,IAgBxBrD,EAhBwB,EAcgBuD,oBAAS,GAdzB,oBAcrB0H,EAdqB,KAcLC,EAdK,KAkB5B,GAAe,SAAXrO,EACFmD,EACE,yBAAKP,UAAU,aACb,kBAACkF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACoG,GAAA,EAAD,CAAYxF,QAAQ,KAAKyF,cAAY,GAArC,mCAIF,kBAACzG,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,aAIH,CAEL,IAAI/L,EAAYoE,EAAUA,EAAQxE,GAAK,GACnCiR,EAAezM,EAAUA,EAAQoG,MAAQ,GAE7CxD,EACE,6BACE,kBAAC2E,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,OAEF,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAG6D,QAAQ,YAClC,kBAACC,GAAA,EAAD,CACElD,QAAQ,UACR9F,QAAS,kBAAMqL,GAAkB,IACjCpC,KAAK,KACLC,MAAO,CAAEC,OAAQ,KAJnB,eASF,kBAACrE,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEtL,KAAMsR,EACNlB,aAAcA,IAEhB,kBAAC,GAAD,CACE1G,KAAM8H,EACN7H,QAAS8H,EACTlS,UAAWA,EACX6Q,aAAcA,OAO1B,OAAO7J,GCJMqL,GA/DiB,SAAC,GAAmB,IAAjBrS,EAAgB,EAAhBA,UAC3BqK,EAAWC,eADgC,EAEG1D,eAA5CK,EAFyC,EAEzCA,gBAAiBqL,EAFwB,EAExBA,uBACnBpM,EAAW0D,cAAY,SAAA7H,GAAK,OAAIA,EAAMmE,SAASzF,QAE/C2D,EAAUwF,cAAY,SAAA7H,GAAK,OAAI+B,EAAkB/B,EAAO/B,MACxDvB,EAAUmL,aAAY5F,EAAyBhE,IAC/C+R,EAAiBvC,KAAEC,UAAUhR,GAEnCuT,qBAAU,WACJ/K,GACFqL,IACGC,MAAK,SAAAvT,GACJqL,EAAS7E,GAASxG,IAClBqL,EAAS1J,EAAsBX,SAGpC,CAACiH,EAAiBqL,EAAwBjI,EAAUrK,IAjBN,MAmBLuK,oBAAS,GAnBJ,oBAmB1C0H,EAnB0C,KAmB1BC,EAnB0B,KAqB7CrB,EAAezM,EAAUA,EAAQoG,MAAQ,GAE7C,OACE,6BACE,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,GAAI6D,QAAQ,YACnC,kBAAC,GAAD,CACEhK,KAAMM,EAASN,KACf2D,QAAQ,iBACR9I,KAAM,CACJkI,gBAAiB3I,EACjB0I,cAAexC,EAASlG,WAE1BwJ,IAAK,kBACH,kBAACqG,GAAA,EAAD,CACElD,QAAQ,UACR9F,QAAS,kBAAMqL,GAAkB,IACjCpC,KAAK,KACLC,MAAO,CAAEC,OAAQ,KAJnB,kBAWN,kBAACrE,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEtL,KAAMsR,EACNlB,aAAcA,IAEhB,kBAAC,GAAD,CACE1G,KAAM8H,EACN7H,QAAS8H,EACTlS,UAAWA,EACX6Q,aAAcA,QC3CX2B,GAnBC,WACd,IAAMtM,EAAW0D,cAAY,qBAAG1D,SAAwBzF,QAExD,OACE,6BACE,kBAAC,GAAD,CACEmF,KAAMM,EAASN,KACf2D,QAAQ,qBACRC,IAAK,kBAAM,kBAAC,GAAD,SAEb,kBAAC,GAAD,CACE5D,KAAMM,EAASN,KACf2D,QAAQ,gCACRC,IAAK,kBAAM,kBAAC,GAAD,CAAyBxJ,UAAWkG,EAASlG,iBCCjDyS,GAjBG,SAAC,GAAqB,IAAnBhS,EAAkB,EAAlBA,KAAM+J,EAAY,EAAZA,MACzB,OACE,kBAAC,KAAD,CACEA,MAAOA,EACP/J,KAAMA,EACNuO,MAAO7B,GACP8B,QAAS,CACP,CAAEzE,MAAO,KAAM0E,MAAO,KAAMG,SAAU,IACtC,CAAE7E,MAAO,OAAQ0E,MAAO,QACxB,CAAE1E,MAAO,QAAS0E,MAAO,SACzB,CAAE1E,MAAO,OAAQ0E,MAAO,QACxB,CAAE1E,MAAO,mBAAoB0E,MAAO,iBCgB7BwD,GAtBD,WACZ,IAAMxM,EAAW0D,cAAY,qBAAG1D,SAAwBzF,QAClD/B,EAAQkL,aAAY3E,IACpB0N,EAAenD,KAAEC,UAAU/Q,GAEjC,OACE,kBAAC,GAAD,CACEkH,KAAMM,EAASN,KACf2D,QAAQ,aACRC,IAAK,kBACH,yBAAK/C,UAAU,aACb,kBAAC,GAAD,CACEhG,KAAMkS,EACNnI,MAAM,gBAIZf,GAAI,kBAAM,mF,UCRDmJ,GAZQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAcC,EAAjB,qCACrB,kBAAC,KAAD,eACED,UAAWE,aAA2BF,EAAW,CAC/CG,cAAe,kBAAM,kBAAC,GAAD,UAEnBF,K,iFCYFG,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBnG,MAAO,gBA2UEoG,GAtUQ,SAAC,GAA+D,IAA7D7O,EAA4D,EAA5DA,OAAQ8O,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,IAAK/U,EAAY,EAAZA,MAClEgV,EAAUT,KACV5I,EAAWC,eACXpE,EAAW0D,cAAY,SAAA7H,GAAK,OAAIA,EAAMmE,SAASzF,QAE/C2D,EAAUwF,cAAY,SAAA7H,GAAK,OAAI+B,EAAkB/B,EAAOyC,EAAOxE,cAC/D2T,EAAU,uBAAOjV,GAAP,CAAc,CAAEkB,GAAI,QAEhCiR,EAAezM,EAAUA,EAAQoG,MAAQ,GACzCoJ,EAAYH,GAAY,CAAE7T,GAAI,MATkD,EAWtD2K,mBAAS/F,EAAOyM,SAXsC,oBAW7EA,EAX6E,KAWpEC,EAXoE,OAY9C3G,mBAASqJ,GAZqC,oBAY7EC,EAZ6E,KAYhEC,EAZgE,OAa9CvJ,mBAAS/F,EAAOkG,aAb8B,oBAa7EA,EAb6E,KAahEC,EAbgE,OAcxDJ,mBAAS/F,EAAO9C,QAdwC,oBAc7EA,EAd6E,KAcrEqS,EAdqE,OAepDxJ,mBAAS/F,EAAO2M,UAfoC,oBAe7EA,EAf6E,KAenEC,EAfmE,OAgBxC7G,mBAAS/F,EAAO6M,gBAhBwB,oBAgB7EA,EAhB6E,KAgB7DC,EAhB6D,OAiB1C/G,mBAAS/F,EAAO+M,eAjB0B,oBAiB7EA,EAjB6E,KAiB9DC,EAjB8D,OAkB1CjH,mBAAS/F,EAAOwP,sBAlB0B,oBAkB7EC,EAlB6E,KAkB9DC,EAlB8D,OAmBpD3J,mBAAS/F,EAAO2P,UAnBoC,oBAmB7EA,EAnB6E,KAmBnEC,GAnBmE,KAqDpF,OACE,0BAAM5I,SAjCiB,SAACN,GACxBA,EAAMC,iBAEN,IAAMlK,EAAY,2BACbuD,GADa,IAEhByM,UACAvG,cACAhJ,SACAyP,WACAE,iBACAE,gBACA0C,gBACAE,WACApL,cAAe8K,EAAYjU,KAE7ByK,EAASrJ,EAAaC,IACtBsS,MAkBE,kBAAC5H,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KAGf,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIsI,GAAI,GACrB,kBAACrI,GAAA,EAAD,CACEpM,GAAG,UACHsM,MAAM,UACNC,MAAO8E,EACPqD,WAAY,CACVhB,SAAUA,GAEZ/G,WAAS,EACT9F,UAAWiN,EAAQN,KACnBhH,SAAU,SAAClB,GAAD,OAAWgG,EAAWhG,EAAMoB,OAAOH,QAC7CF,UAAQ,KAIZ,kBAACN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGsI,GAAI,GACpB,kBAAChE,GAAA,EAAD,CACE9D,WAAS,GAET,kBAAC+D,GAAA,EAAD,CAAYP,MAAO,CAAE9C,MAAO,WAAa4E,QAAM,EAACjS,GAAG,sBAAnD,UAGA,kBAAC2Q,GAAA,EAAD,CACEC,QAAQ,qBACR5Q,GAAG,SACHuM,MAAOzK,EACP0K,SAAU,SAACC,GAAD,OAAO0H,EAAU1H,EAAEC,OAAOH,QACpCoI,YAAa7S,EACb8S,WAAY,CACVlB,SAAUA,IAGZ,kBAAC7C,GAAA,EAAD,CAAUtE,MAAM,QAAhB,QACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,UAAhB,aAKN,kBAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGsI,GAAI,GACpB,kBAAC,GAAD,CACE9K,QAAQ,oBACR9I,KAAM,CACJkI,gBAAiBnE,EAAOxE,UACxB0I,cAAexC,EAASlG,WAE1BwJ,IAAK,kBACH,kBAACiL,GAAA,EAAD,CACE1E,MAAO,CAAE2E,WAAY,IACrB9U,GAAG,cACHkR,QAAS6C,EACTxH,MAAOyH,EACPxH,SAAU,SAACC,EAAGsI,GACDb,EAAXa,GAAqD,CAAE/U,GAAI,QAE7DgV,eAAgB,SAAAC,GAAM,uBAAIA,EAAOtT,YAAX,QAAmB,IACzCuT,kBAAmB,SAACD,EAAQ1I,GAAT,OAAmB0I,EAAOjV,KAAOuM,EAAMvM,IAC1DmV,YAAa,SAACC,GAAD,OACX,kBAAChJ,GAAA,EAAD,iBAAegJ,EAAf,CAAuB9I,MAAM,qBAAqBW,OAAO,aAE3DpG,UAAWiN,EAAQN,KACnBE,SAAUA,KAGd7J,GAAI,kBACF,kBAACgL,GAAA,EAAD,CACE1E,MAAO,CAAE2E,WAAY,IACrB9U,GAAG,cACHkR,QAAS6C,EACTxH,MAAOyH,EACPxH,SAAU,SAACC,EAAGsI,GACDb,EAAXa,GAAqD,CAAE/U,GAAI,QAE7DgV,eAAgB,SAAAC,GAAM,uBAAIA,EAAOtT,YAAX,QAAmB,IACzCuT,kBAAmB,SAACD,EAAQ1I,GAAT,OAAmB0I,EAAOjV,KAAOuM,EAAMvM,IAC1DmV,YAAa,SAACC,GAAD,OACX,kBAAChJ,GAAA,EAAD,iBAAegJ,EAAf,CAAuB9I,MAAM,qBAAqBW,OAAO,aAE3DpG,UAAWiN,EAAQN,KACnB6B,UAAW3B,QAMnB,kBAAC3H,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGsI,GAAI,GACpB,kBAAChE,GAAA,EAAD,CACE9D,WAAS,GAET,kBAAC+D,GAAA,EAAD,CAAYP,MAAO,CAAE9C,MAAO,WAAa4E,QAAM,EAACjS,GAAG,wBAAnD,YAGA,kBAAC2Q,GAAA,EAAD,CACEC,QAAQ,uBACR5Q,GAAG,WACHuM,MAAOgF,EACP/E,SAAU,SAACC,GAAD,OAAO+E,EAAY/E,EAAEC,OAAOH,QACtCoI,YAAapD,EACbqD,WAAY,CACVlB,SAAUA,IAGZ,kBAAC7C,GAAA,EAAD,CAAUtE,MAAM,IAAhB,QACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,OAAhB,OACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,UAAhB,UACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,QAAhB,QACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,aAAhB,gBAKN,kBAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGsI,GAAI,GACpB,kBAACrI,GAAA,EAAD,CACEpM,GAAG,aACHsM,MAAM,aACNC,MAAOqH,EAAWjS,KAClB+S,WAAY,CACVhB,UAAU,EACV2B,UAAW3B,GAEb/G,WAAS,EACT9F,UAAWiN,EAAQN,QAIvB,kBAACzH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIsI,GAAI,GACrB,kBAACrI,GAAA,EAAD,CACEpM,GAAG,qBACHsM,MAAM,qBACNC,MAAO0E,EACPyD,WAAY,CACVhB,UAAU,EACV2B,UAAW3B,GAEb/G,WAAS,EACT9F,UAAWiN,EAAQN,QAIvB,kBAACzH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI4F,GAAI,EAAG0C,GAAI,GAC5B,kBAAC,KAAD,CAAyB7H,MAAOC,YAC9B,kBAAC,KAAD,CACEmF,WAAS,EACT1F,MAAM,kBACNU,OAAO,aACPT,MAAOkF,EACPjF,SAAU,SAAAU,GAAI,OAAIwE,EAAkBxE,IACpC0H,WAAY,CACVlB,SAAUA,GAEZvG,oBAAqB,CACnB,aAAc,cACdkI,SAAU3B,EACVA,SAAUA,GAEZ/G,WAAS,EACT9F,UAAWiN,EAAQN,SAKzB,kBAACzH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI4F,GAAI,EAAG0C,GAAI,GAC5B,kBAAC,KAAD,CAAyB7H,MAAOC,YAC9B,kBAAC,KAAD,CACEmF,WAAS,EACT1F,MAAM,yBACNU,OAAO,aACPT,MAAOoF,EACPnF,SAAU,SAAAU,GAAI,OAAI0E,EAAiB1E,IACnC0H,WAAY,CACVlB,SAAUA,GAEZvG,oBAAqB,CACnB,aAAc,cACdkI,SAAU3B,EACVA,SAAUA,GAEZ/G,WAAS,EACT9F,UAAWiN,EAAQN,SAKzB,kBAACzH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIsI,GAAI,GACrB,kBAAC,KAAD,CAAyB7H,MAAOC,YAC9B,kBAAC,KAAD,CACEmF,WAAS,EACT1F,MAAM,yBACNU,OAAO,aACPT,MAAO8H,EACP7H,SAAU,SAAAU,GAAI,OAAIoH,EAAiBpH,IACnC0H,WAAY,CACVlB,SAAUA,GAEZvG,oBAAqB,CACnB,aAAc,cACdkI,SAAU3B,EACVA,SAAUA,GAEZ/G,WAAS,EACT9F,UAAWiN,EAAQN,SAKzB,kBAACzH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEpM,GAAG,cACH8R,WAAS,EACTxF,MAAM,uBACNC,MAAOzB,EACP4J,WAAY,CACVhB,SAAUA,GAEZ/G,WAAS,EACT9F,UAAWiN,EAAQN,KACnBhH,SAAU,SAACC,GAAD,OAAO1B,EAAe0B,EAAEC,OAAOH,WAI7C,kBAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACE0F,WAAS,EACT9R,GAAG,WACHsM,MAAM,WACNC,MAAOgI,EACPG,WAAY,CACVhB,SAAUA,GAEZ/G,WAAS,EACTH,SAAU,SAACC,GAAD,OAAO+H,GAAY/H,EAAEC,OAAOH,QACtC1F,UAAWiN,EAAQN,QAIvB,kBAACzH,GAAA,EAAD,CAAMC,WAAS,EAACsJ,QAAS,EAAGrJ,QAAS,GACnC,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGH,WAAS,EAACgE,QAAQ,aAE/B0D,GACD,kBAAC,KAAD,CACE3G,QAAQ,YACRO,KAAK,SACLD,MAAM,UACN8C,MAAO,CAAEoF,QAAS,CAAE7B,cAJtB,WAUJ,kBAAC3H,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGH,WAAS,EAACgE,QAAQ,eAE/B0D,GACD,kBAAC,KAAD,CACE3G,QAAQ,YACR9F,QAhRW,WACvB0M,IACArC,EAAW1M,EAAOyM,SAClBtG,EAAenG,EAAOkG,aACtBqJ,EAAUvP,EAAO9C,QACjBoS,EAAetP,EAAOqP,aACtBzC,EAAY5M,EAAO2M,UACnBG,EAAkB9M,EAAO6M,gBACzBG,EAAiBhN,EAAO4Q,sBACxBlB,EAAiB1P,EAAOyP,eACxBG,GAAY5P,EAAO2P,WAuQPlH,MAAM,WAHR,eCnLCoI,GAnJA,WAAO,IAAD,EACiCzO,eAA5CK,EADW,EACXA,gBAAiBqL,EADN,EACMA,uBACnBpM,EAAW0D,cAAY,SAAA7H,GAAK,OAAIA,EAAMmE,SAASzF,QAE/Cb,EAAK0V,eAAY1V,GACjB2V,EAAUC,eACVnL,EAAWC,eAEX9F,EAASoF,cAAY,SAAA7H,GAAK,OAAIc,EAAiBd,EAAO0T,OAAO7V,OAC7D8V,EAAe9L,cAAY,qBAAGnL,QAAsBiD,UACpDiU,EAAc/L,cAAY,qBAAGnL,QAAsBkD,SACnDjD,EAAQkL,aAAY3E,IACpB2Q,EAAahM,cAAY,qBAAGlL,MAAkBgD,UAZjC,EAca6I,oBAAS,GAdtB,oBAcZ+I,EAdY,KAcFC,EAdE,KAgBbsC,EAAmB,CAAEV,QAAS7B,EAAW,GAAK,QAEpDtB,qBAAU,WACJ/K,GACFqL,IACGC,MAAK,SAAAvT,GACJqL,EAAS7E,GAASxG,IAClBqL,EAASzJ,EAAYhB,SAG1B,CAACA,EAAIyK,EAAUiI,EAAwBrL,IAE1C,IAeID,EAfE8O,EAAiB,WACrBvC,GAAaD,IAGTyC,EAAe,WACnB,IAAMC,EAAa,CACjBpW,KACAI,UAAWwE,EAAOxE,WAEpBqK,EAASlJ,EAAa6U,IAClB7U,EAAac,WACfsT,EAAQU,KAAK,aAMjB,GAAqB,YAAjBP,EACF1O,EAAU,kBAAC,GAAD,WAEL,GAAqB,cAAjB0O,GAA+C,cAAfE,EAA4B,CACrE,IAAMpC,EAAa9U,EAAMwX,MAAK,SAAAC,GAAI,OAAIA,EAAKvW,KAAO4E,EAAOsE,gBACnD2K,EAAM/U,EAAMwX,MAAK,SAAAC,GAAI,OAAIA,EAAKvW,KAAO4E,EAAOuE,iBAElD/B,EACE,yBAAKP,UAAU,aACb,kBAACkF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,uCAAanM,IAEf,kBAAC+L,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACgE,QAAQ,WAAW7D,GAAI,EAAGF,QAAS,GACtD,kBAAC,GAAD,CACEjG,KAAMM,EAASN,KACf2D,QAAQ,eACR9I,KAAM,CACJkI,gBAAiBnE,EAAOxE,UACxB0I,cAAexC,EAASlG,WAE1BwJ,IAAK,kBACH,kBAAC4M,GAAA,EAAD,CACEvP,QAASiP,EACT7I,MAAM,UACNoJ,aAAW,OACXvG,KAAK,SACLC,MAAO8F,GAEP,kBAAC,KAAD,UAIN,kBAAC,GAAD,CACEjQ,KAAMM,EAASN,KACf2D,QAAQ,8BACR9I,KAAM,CACJmI,OAAQ1C,EAAStG,GACjBkJ,aAActE,EAAOsE,aACrBC,cAAevE,EAAOuE,eAExBS,IAAK,kBACH,kBAAC4M,GAAA,EAAD,CACEvP,QAASiP,EACT7I,MAAM,UACNoJ,aAAW,OACXvG,KAAK,SACLC,MAAO8F,GAEP,kBAAC,KAAD,UAIN,yBAAK9F,MAAO,CAAE1I,MAAO,MACrB,kBAAC,GAAD,CACEzB,KAAMM,EAASN,KACf2D,QAAQ,iBACR9I,KAAM,CACJkI,gBAAiBnE,EAAOxE,UACxB0I,cAAexC,EAASlG,WAE1BwJ,IAAK,kBACH,kBAAC4M,GAAA,EAAD,CAAKvP,QAASkP,EAAc9I,MAAM,YAAYoJ,aAAW,SAASvG,KAAK,UACrE,kBAAC,KAAD,WAKR,kBAACnE,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEvH,OAAQA,EACR8O,SAAUA,EACVC,YAAauC,EACbtC,WAAYA,EACZC,IAAKA,EACL/U,MAAOA,WAKS,WAAjBgX,IACT1O,EAAU,6BAAM2O,IAGlB,IAAIW,EAAgB9R,EAASA,EAAOxE,UAAY,KAEhD,OACE,kBAAC,GAAD,CACE4F,KAAMM,EAASN,KACf2D,QAAQ,kBACR9I,KAAM,CACJkI,gBAAiB2N,EACjB5N,cAAexC,EAASlG,WAE1BwJ,IAAK,kBAAM,6BAAMxC,IACjByC,GAAI,kBACF,kFCoBO8M,GAlKS,SAAC,GAAwC,IAAtCnS,EAAqC,EAArCA,QAASkP,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACtClJ,EAAWC,eAD6C,EAGpCC,mBAASnG,EAAQoG,OAHmB,oBAGvDA,EAHuD,KAGhDC,EAHgD,OAIxBF,mBAASnG,EAAQsG,aAJO,oBAIvDA,EAJuD,KAI1CC,EAJ0C,OAK5BJ,mBAASnG,EAAQyG,WALW,oBAKvDA,EALuD,KAK5CC,EAL4C,OAMpBP,mBAASnG,EAAQ2G,eANG,oBAMvDA,EANuD,KAMxCC,EANwC,OAOpBT,mBAASnG,EAAQoS,eAPG,oBAOvDA,EAPuD,KAOxCC,EAPwC,KAiC9D,OACE,0BAAMjL,SAzBiB,SAACN,GACxBA,EAAMC,iBACN,IAAMlK,EAAe,CACnBrB,GAAIwE,EAAQxE,GACZ4K,QACAE,cACAG,YACAE,gBACAyL,iBAGFnM,EAAS7G,EAAcvC,IACvBsS,MAcE,kBAAC5H,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEpM,GAAG,QACHsM,MAAM,gBACNC,MAAO3B,EACP8J,WAAY,CACVhB,SAAUA,EACVoD,iBAAkBpD,GAEpB/G,WAAS,EACTH,SAAU,SAAClB,GAAD,OAAWT,EAASS,EAAMoB,OAAOH,QAC3CF,UAAQ,KAGZ,kBAACN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRrM,GAAG,cACH8R,WAAS,EACTxF,MAAM,cACNC,MAAOzB,EACP4J,WAAY,CACVhB,SAAUA,EACVoD,iBAAkBpD,GAEpB/G,WAAS,EACTH,SAAU,SAACC,GAAD,OAAO1B,EAAe0B,EAAEC,OAAOH,WAG7C,kBAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGsI,GAAI,GACpB,kBAAC,KAAD,CAAyB7H,MAAOC,YAC9B,kBAAC,KAAD,CACER,UAAQ,EACR2F,WAAS,EACT1F,MAAM,aACNU,OAAO,aACPT,MAAOtB,EACPuB,SAAU,SAAAU,GAAI,OAAIhC,EAAagC,IAC/B0H,WAAY,CACVlB,SAAUA,EACV2B,SAAU3B,GAEZvG,oBAAqB,CACnB,aAAc,cACdkI,SAAU3B,EACVA,SAAUA,GAEZ/G,WAAS,MAIf,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGsI,GAAI,GACpB,kBAAC,KAAD,CAAyB7H,MAAOC,YAC9B,kBAAC,KAAD,CACER,UAAQ,EACR2F,WAAS,EACT1F,MAAM,kBACNU,OAAO,aACPT,MAAOpB,EACPqB,SAAU,SAAAU,GAAI,OAAI9B,EAAiB8B,IACnC0H,WAAY,CACVlB,SAAUA,EACV2B,SAAU3B,GAEZvG,oBAAqB,CACnB,aAAc,cACdkI,SAAU3B,EACVA,SAAUA,GAEZ/G,WAAS,MAIf,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIsI,GAAI,GACrB,kBAAC,KAAD,CAAyB7H,MAAOC,YAC9B,kBAAC,KAAD,CACEmF,WAAS,EACT1F,MAAM,kBACNU,OAAO,aACPT,MAAOqK,EACPpK,SAAU,SAAAU,GAAI,OAAI2J,EAAiB3J,IACnC0H,WAAY,CACVlB,SAAUA,EACV2B,SAAU3B,GAEZvG,oBAAqB,CACnB,aAAc,cACdkI,SAAU3B,EACVA,SAAUA,GAEZ/G,WAAS,MAIf,kBAACZ,GAAA,EAAD,CAAMC,WAAS,EAACsJ,QAAS,EAAGrJ,QAAS,GACnC,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGH,WAAS,EAACgE,QAAQ,aAE/B0D,GACD,kBAAC,KAAD,CACE3G,QAAQ,YACRO,KAAK,SACLD,MAAM,UACN8C,MAAO,CAAEoF,QAAS,CAAE7B,cAJtB,WAUJ,kBAAC3H,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGH,WAAS,EAACgE,QAAQ,eAE/B0D,GACD,kBAAC,KAAD,CACE3G,QAAQ,YACR9F,QA7HW,WACvB0M,IACA9I,EAASrG,EAAQoG,OACjBG,EAAevG,EAAQsG,aACvBI,EAAa1G,EAAQyG,WACrBG,EAAiB5G,EAAQ2G,eACzB0L,EAAiBrS,EAAQoS,gBAwHbvJ,MAAM,WAHR,eCrJR0J,GAAU,SAAC,GAAY,I3C+FS3W,E2ChFhCgH,EAfapH,EAAS,EAATA,GACXsG,EAAW0D,cAAY,qBAAG1D,SAAwBzF,QAClD2D,EAAUwF,cAAY,SAAA7H,GAAK,OAAI+B,EAAkB/B,EAAOnC,MACxDlB,EAAQkL,c3C4FsB5J,E2C5FaJ,E3C6FjDqE,YACE,CACE,SAAAlC,GAAK,OAAI+B,EAAkB/B,EAAO/B,IAClC,SAAA+B,GAAK,OAAIA,EAAMrD,MAAMwF,IAAIC,KAAI,SAAAvE,GAAE,OAAImC,EAAMrD,MAAMgC,SAASd,SAE1D,SAACwE,EAAS1F,GACR,OAAK0F,EAGEC,OAAOC,KAAK5F,GAChByF,KAAI,SAAAyS,GAAC,OAAIlY,EAAMkY,MACf/S,QAAO,SAAAsS,GAAI,OAAI/R,EAAQ1F,MAAM+F,SAAS0R,EAAKvW,OAJrC,Q2ClGPiX,EAAgBjN,cAAY,qBAAGlG,SAAwBhC,UALnC,EAOM6I,oBAAS,GAPf,oBAOnB+I,EAPmB,KAOTC,EAPS,KASpBsC,EAAmB,CAAEV,QAAS7B,EAAW,GAAK,QAE9CwC,EAAiB,WACrBvC,GAAaD,IAmDf,MA9CsB,YAAlBuD,EACF7P,EAAU,kBAAC,GAAD,MACiB,cAAlB6P,EACT7P,EACE,yBAAKP,UAAU,aACb,kBAACkF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,4BAAK3H,EAAQoG,QAEf,kBAACmB,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACgE,QAAQ,WAAW7D,GAAI,EAAGF,QAAS,GACtD,kBAAC,GAAD,CACEjG,KAAMM,EAASN,KACf2D,QAAQ,gBACRC,IAAK,kBACH,kBAAC4M,GAAA,EAAD,CACEvP,QAASiP,EACT7I,MAAM,UACNoJ,aAAW,OACXvG,KAAK,SACLC,MAAO8F,GAEP,kBAAC,KAAD,WAKR,kBAAClK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACE3H,QAASA,EACTkP,SAAUA,EACVC,YAAauC,KAGjB,kBAACnK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIgE,MAAO,CAAEmF,QAAS,KACnC,kBAAC,GAAD,CACEzU,KAAM/B,EACN8L,MAAM,wBAKW,WAAlBqM,IACT7P,EAAU,8CAIV,6BACGA,IA8BQ8P,GAzBO,WACpB,IAAM5Q,EAAW0D,cAAY,SAAA7H,GAAK,OAAIA,EAAMmE,SAASzF,QAC/CsW,EAAanN,cAAY,SAAA7H,GAAK,OAAIA,EAAMmE,SAASxE,UAEjD9B,EAAK6V,OAAOH,eAAY1V,IAE1BsQ,EACa,cAAf6G,EACI7Q,EAASlG,UACT,KAEN,OACE,kBAAC,GAAD,CACE4F,KAAMM,EAASN,KACf2D,QAAQ,mBACR9I,KAAM,CACJT,UAAWJ,EACX8I,cAAewH,GAEjB1G,IAAK,kBAAM,kBAAC,GAAD,CAAS5J,GAAIA,KACxB6J,GAAI,kBAAM,yBAAKhD,UAAU,aAAf,uD,UC9EVuQ,GAAa,WACjB,IAAM3M,EAAWC,eACXiL,EAAUC,eACRW,EAASvP,eAATuP,KAHe,EAKC5L,mBAAS,IALV,oBAKhBhJ,EALgB,KAKV0V,EALU,OAMa1M,mBAAS,IANtB,oBAMhB2M,EANgB,KAMJC,EANI,KA6BvB,OACE,6BACE,kBAAC9L,GAAA,EAAD,CACE+L,sBAAoB,EACpBC,sBAAoB,EACpBlN,MAAM,EACNoB,kBAAgB,qBAEhB,0BAAMC,SA7BZ,SAAiBN,GACfA,EAAMC,iBAEN,IAAMmM,EAAY,CAChB/V,OACAqE,KAAM,QACN2R,MAAOpB,EAAKoB,MACZL,cAGFxU,QAAQC,IAAI,yEAAgE2U,GAE5EjN,EAASvF,GAAWwS,IACjB/E,MAAK,WACJlI,EAAS3E,SAEV6M,MAAK,WACJgD,EAAQU,KAAK,UAaX,kBAACxK,GAAA,EAAD,CAAa7L,GAAG,kBAAhB,oBACA,kBAAC8L,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACyL,GAAA,EAAD,wEAKF,kBAAC7L,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACgE,QAAQ,SAAS7D,GAAI,IACxC,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRrM,GAAG,OACHuM,MAAO5K,EACP2K,MAAM,OACNE,SAAU,SAAAC,GAAC,OAAI4K,EAAQ5K,EAAEC,OAAOH,QAChCI,WAAS,EACTkL,gBAAiB,CACf5F,QAAQ,MAKd,kBAAClG,GAAA,EAAD,CAAMC,WAAS,EAACgE,QAAQ,SAAS9D,MAAI,EAACC,GAAI,IACxC,kBAACsE,GAAA,EAAD,CACE9D,WAAS,GAET,kBAAC+D,GAAA,EAAD,CAAYrE,UAAQ,EAAC4F,QAAM,EAACjS,GAAG,wBAA/B,cAGA,kBAAC2Q,GAAA,EAAD,CACEtE,UAAQ,EACRuE,QAAQ,yBACR5Q,GAAG,aACHuM,MAAO+K,EACP9K,SAAU,SAACC,GAAD,OAAO8K,EAAc9K,EAAEC,OAAOH,QACxCoI,YAAY,IAEZ,kBAAC9D,GAAA,EAAD,CAAUtE,MAAM,UAAhB,UACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,aAAhB,aACA,kBAACsE,GAAA,EAAD,CAAUtE,MAAM,WAAhB,cAKN,kBAACR,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,GAAI6D,QAAQ,UACnC,kBAAC5C,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQE,KAAK,SAASD,MAAM,WAA5B,mBA2BHyK,GAbQ,WACrB,IAAMxR,EAAW0D,cAAY,qBAAG1D,SAAwBzF,QAExD,OACE,kBAAC,GAAD,CACEmF,KAAMM,EAASN,KACf2D,QAAQ,eACRC,IAAK,kBAAM,kBAAC,GAAD,OACXC,GAAI,kBAAM,kBAAC,KAAD,CAAUjC,GAAG,UCzEdmQ,I,OAzCH,WACV,IAAMtN,EAAWC,eADD,EAEqD1D,eAA7DgR,EAFQ,EAERA,UAAW3Q,EAFH,EAEGA,gBAAiBqL,EAFpB,EAEoBA,uBAAwB6D,EAF5C,EAE4CA,KAc5D,OAZAnE,qBAAU,WACJ/K,GACFqL,IACGC,MAAK,SAAAvT,GACJqL,EAAS7E,GAASxG,IAClBqL,EAAS3E,MACT2E,EAASjH,KACTiH,EAASzF,WAGd,CAACyF,EAAUiI,EAAwBrL,EAAiBkP,IAEnDyB,EACK,kBAAC,GAAD,MAIP,yBAAKhY,GAAG,MAAM6G,UAAU,4BACtB,kBAAC,GAAD,MACA,yBAAKA,UAAU,kDACb,yBAAKA,UAAU,QACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOgB,OAAK,EAACoQ,KAAK,IAAIhF,UAAW5I,KACjC,kBAAC,GAAD,CAAgBxC,OAAK,EAACoQ,KAAK,UAAUhF,UAAW6E,KAChD,kBAAC,GAAD,CAAgBjQ,OAAK,EAACoQ,KAAK,YAAYhF,UAAW5C,KAClD,kBAAC,GAAD,CAAgBxI,OAAK,EAACoQ,KAAK,gBAAgBhF,UAAWiE,KACtD,kBAAC,GAAD,CAAgBrP,OAAK,EAACoQ,KAAK,SAAShF,UAAWH,KAC/C,kBAAC,GAAD,CAAgBjL,OAAK,EAACoQ,KAAK,WAAWhF,UAAWL,KACjD,kBAAC,GAAD,CAAgB/K,OAAK,EAACoQ,KAAK,eAAehF,UAAWiF,QAI3D,kBAAC,GAAD,SCrBSC,GA5BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAK5BzC,EAAUC,eAMhB,OACE,kBAAC,KAAD,CACEyC,OAZW/S,8BAaXgT,SAZahT,mCAabiT,YAAajQ,OAAOC,SAASC,OAC7BgQ,mBATuB,SAACC,GAC1B9C,EAAQU,MAAa,OAARoC,QAAQ,IAARA,OAAA,EAAAA,EAAUpQ,WAAYC,OAAOC,SAASmQ,WASjDC,SAdarT,sBAgBZ8S,I,OCdPQ,IAASrJ,OACP,kBAAC,KAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAUrQ,MAAOA,IACf,kBAAC,GAAD,SAIN2Z,SAASC,eAAe,W","file":"static/js/main.aa7bda22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bug-icon.148dbc25.png\";","import { schema } from 'normalizr'\n\nexport const projectSchema = new schema.Entity('projects', {})\nexport const userSchema = new schema.Entity('users', {})\nexport const defectSchema = new schema.Entity('defects', {})\nexport const commentSchema = new schema.Entity('comments', {})\n\nprojectSchema.define({\n  defects: [defectSchema],\n  users: [userSchema]\n})\n\ndefectSchema.define({\n  comments: [commentSchema]\n})\n\n","import axios from 'axios'\nimport store from '../app/store'\n\nconst baseUrl = '/api/projects'\n\nconst getToken = () => {\n  const state = store.getState()\n  return state.token\n}\n\nconst getAll = async () => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(baseUrl, config)\n}\n\nconst create = newObject => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.post(baseUrl, newObject, config)\n}\n\nconst update = (id, newObject) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.put(`${baseUrl}/${id}`, newObject, config)\n}\n\nconst remove = (id) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n}","import axios from 'axios'\nimport store from '../app/store'\n\nconst baseUrl = '/api/defects'\n\nconst getToken = () => {\n  const state = store.getState()\n  return state.token\n}\n\nconst getAll = () => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(baseUrl, config)\n}\n\nconst getById = (id) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(`${baseUrl}/${id}`, config)\n}\n\nconst getByProject = (projectId) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(`${baseUrl}/defects-by-project/${projectId}`, config)\n}\n\nconst create = newObject => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.post(baseUrl, newObject, config)\n}\n\nconst update = (id, newObject) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.put(`${baseUrl}/${id}`, newObject, config)\n}\n\nconst remove = (id) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default {\n  getAll,\n  getById,\n  getByProject,\n  create,\n  update,\n  remove\n}","import {\n  createEntityAdapter,\n  createSlice,\n  createAsyncThunk,\n  createSelector\n} from '@reduxjs/toolkit'\nimport { normalize } from 'normalizr'\nimport { defectSchema } from '../../schemas'\nimport defectService from '../../../services/defects'\n\n\nconst defectsAdapter = createEntityAdapter()\n\nexport const fetchAllDefects = createAsyncThunk(\n  'defects/fetchAll',\n  async () => {\n    const response = await defectService.getAll()\n    const normalized = normalize(response.data, [defectSchema])\n    return normalized.entities\n  }\n)\n\nexport const fetchDefectsByProject = createAsyncThunk(\n  'defects/fetchByProject',\n  async (projectId) => {\n    const response = await defectService.getByProject(projectId)\n    const normalized = normalize(response.data, [defectSchema])\n    return normalized.entities\n  }\n)\n\n// may have to fix in order to retrieve comments\nexport const fetchDefect = createAsyncThunk(\n  'defects/fetchById',\n  async (id) => {\n    const response = await defectService.getById(id)\n    const normalized = normalize(response.data, defectSchema)\n    return normalized.entities\n  }\n)\n\nexport const addNewDefect = createAsyncThunk(\n  'defects/add',\n  async (newDefect) => {\n    const response = await defectService.create(newDefect)\n    const defectToAdd = {\n      ...response.data,\n      comments: []\n    }\n    return defectToAdd\n  }\n)\n\nexport const updateDefect = createAsyncThunk(\n  'defects/update',\n  async (updateValues, { rejectWithValue }) => {\n    const { id } = updateValues\n    try {\n      const response = await defectService.update(id, updateValues)\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteDefect = createAsyncThunk(\n  'defects/delete',\n  async (values) => {\n    await defectService.remove(values.id)\n    return values\n  }\n)\n\nconst defectsSlice = createSlice({\n  name: 'defects',\n  initialState: defectsAdapter.getInitialState({\n    status: 'idle',\n    error: null\n  }),\n  reducers: {},\n  extraReducers: {\n    [fetchAllDefects.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchAllDefects.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      defectsAdapter.setAll(state, action.payload.defects)\n    },\n    [fetchAllDefects.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    },\n    [fetchDefectsByProject.fulfilled]: (state, action) => {\n      if (action.payload.defects) {\n        defectsAdapter.upsertMany(state, action.payload.defects)\n      }\n    },\n    [fetchDefect.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchDefect.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      defectsAdapter.upsertMany(state, action.payload.defects)\n    },\n    [fetchDefect.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    },\n    [addNewDefect.fulfilled]: (state, action) => {\n      defectsAdapter.addOne(state, action.payload)\n    },\n    [updateDefect.fulfilled]: (state, action) => {\n      defectsAdapter.upsertOne(state, action.payload)\n    },\n    [deleteDefect.fulfilled]: (state, action) => {\n      defectsAdapter.removeOne(state, action.payload.id)\n      console.log(\"action payload\", action.payload)\n    }\n  }\n})\n\nexport default defectsSlice.reducer\n\nexport const {\n  selectById: selectDefectById,\n  selectIds: selectDefectIds,\n  selectEntities: selectDefectEntities,\n  selectAll: selectAllDefects,\n  selectTotal: selectTotalDefects\n} = defectsAdapter.getSelectors(state => state.defects)\n\nexport const selectCommentsByDefectId = defectId =>\n  createSelector(\n    [\n      state => selectDefectById(state, defectId),\n      state => state.comments.ids.map(id => state.comments.entities[id])\n    ],\n    (defect, comments) => {\n      if (!defect) {\n        return []\n      }\n      return Object.keys(comments)\n        .map(c => comments[c])\n        .filter(comment => defect.comments.includes(comment.id))\n    }\n  )","import {\n  createEntityAdapter,\n  createSlice,\n  createAsyncThunk,\n  createSelector\n} from '@reduxjs/toolkit'\nimport { normalize } from 'normalizr'\nimport { projectSchema } from '../../schemas'\nimport projectService from '../../../services/projects'\nimport { addNewDefect, deleteDefect } from '../defects/defectsSlice'\n\nconst projectsAdapter = createEntityAdapter()\n\nexport const fetchAllProjects = createAsyncThunk(\n  'projects/fetchAll',\n  async () => {\n    const response = await projectService.getAll()\n    const normalized = normalize(response.data, [projectSchema])\n    return normalized.entities\n  }\n)\n\nexport const addNewProject = createAsyncThunk(\n  'projects/add',\n  async (newProject) => {\n    const response = await projectService.create(newProject)\n    return response.data\n  }\n)\n\nexport const updateProject = createAsyncThunk(\n  'projects/update',\n  async (updateValues, { rejectWithValue }) => {\n    const { id } = updateValues\n    try {\n      const response = await projectService.update(id, updateValues)\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nconst projectsSlice = createSlice({\n  name: 'projects',\n  initialState: projectsAdapter.getInitialState({\n    status: 'idle',\n    error: null\n  }),\n  reducers: {},\n  extraReducers: {\n    [fetchAllProjects.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchAllProjects.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      projectsAdapter.setAll(state, action.payload.projects)\n    },\n    [fetchAllProjects.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    },\n    [addNewProject.fulfilled]: (state, action) => {\n      state.data = state.data.concat(action.payload)\n    },\n    [updateProject.fulfilled]: (state, action) => {\n      projectsAdapter.upsertOne(state, action.payload)\n    },\n    [addNewDefect.fulfilled]: (state, action) => {\n      const id = action.payload.projectId\n      const defectId = action.payload.id\n      state.entities[id].defects = state.entities[id].defects.concat(defectId)\n    },\n    [deleteDefect.fulfilled]: (state, action) => {\n      const id = action.payload.projectId\n      const defectId = action.payload.projectId\n      state.entities[id].defects = state.entities[id].defects.filter(id => id !== defectId)\n    }\n  }\n})\n\nexport default projectsSlice.reducer\n\nexport const {\n  selectById: selectProjectById,\n  selectIds: selectProjectIds,\n  selectEntities: selectProjectEntities,\n  selectAll: selectAllProjects,\n  selectTotal: selectTotalProjects\n} = projectsAdapter.getSelectors(state => state.projects)\n\nexport const selectDefectsByProjectId = projectId =>\n  createSelector(\n    [\n      state => selectProjectById(state, projectId),\n      state => state.defects.ids.map(id => state.defects.entities[id])\n    ],\n    (project, defects) => {\n      if (!project) {\n        return []\n      }\n      return Object.keys(defects)\n        .map(d => defects[d])\n        .filter(defect => project.defects.includes(defect.id))\n    }\n  )\n\nexport const selectUsersByProjectId = projectId =>\n  createSelector(\n    [\n      state => selectProjectById(state, projectId),\n      state => state.users.ids.map(id => state.users.entities[id])\n    ],\n    (project, users) => {\n      if (!project) {\n        return []\n      }\n      return Object.keys(users)\n        .map(u => users[u])\n        .filter(user => project.users.includes(user.id))\n    }\n  )","import axios from 'axios'\nimport store from '../app/store'\n\nconst baseUrl = '/api/users'\n\nconst getToken = () => {\n  const state = store.getState()\n  return state.token\n}\n\nconst getAll = async () => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(baseUrl, config)\n}\n\nconst getAuthenticatedUser = async () => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(`${baseUrl}/authenticatedUser`, config)\n}\n\nconst create = newObject => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.post(baseUrl, newObject, config)\n}\n\nexport default {\n  getAll,\n  getAuthenticatedUser,\n  create\n}","import {\n  createEntityAdapter,\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit'\nimport { normalize } from 'normalizr'\nimport { userSchema } from '../../schemas'\nimport userService from '../../../services/users'\n\n\nconst usersAdapter = createEntityAdapter()\n\nexport const fetchAllUsers = createAsyncThunk(\n  'users/fetchAll',\n  async () => {\n    const response = await userService.getAll()\n    const normalized = normalize(response.data, [userSchema])\n    return normalized.entities\n  }\n)\n\nexport const addNewUser = createAsyncThunk(\n  'users/add',\n  async (newUser) => {\n    const response = await userService.create(newUser)\n    console.log('response data', response.data)\n    return response.data\n  }\n)\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: usersAdapter.getInitialState({\n    status: 'idle'\n  }),\n  reducers: {},\n  extraReducers: {\n    [fetchAllUsers.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchAllUsers.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      usersAdapter.setAll(state, action.payload.users)\n    },\n    [fetchAllUsers.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    },\n    [addNewUser.fulfilled]: (state, action) => {\n      usersAdapter.addOne(state, action.payload)\n    }\n  }\n})\n\nexport default usersSlice.reducer\n\nexport const {\n  selectById: selectUserById,\n  selectIds: selectUserIds,\n  selectEntities: selectUserEntities,\n  selectAll: selectAllUsers,\n  selectTotal: selectTotalUsers\n} = usersAdapter.getSelectors(state => state.users)","import axios from 'axios'\nimport store from '../app/store'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/comments`\n\nconst getToken = () => {\n  const state = store.getState()\n  return state.token\n}\n\nconst getAll = () => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(baseUrl, config)\n}\n\nconst getById = (id) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(`${baseUrl}/${id}`, config)\n}\n\nconst getByDefectId = (defectId) => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.get(`${baseUrl}/defect/${defectId}`, config)\n}\n\nconst create = newObject => {\n  const token = getToken()\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  }\n  return axios.post(baseUrl, newObject, config)\n}\n\nexport default {\n  getAll,\n  getById,\n  getByDefectId,\n  create\n}","import {\n  createEntityAdapter,\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit'\nimport commentsService from '../../../services/comments'\n\nconst commentsAdapter = createEntityAdapter()\n\nexport const fetchCommentsByDefect = createAsyncThunk(\n  'comments/fetchByDefect',\n  async (defectId) => {\n    const response = await commentsService.getByDefectId(defectId)\n    return response.data\n  }\n)\n\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState: commentsAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: {\n    [fetchCommentsByDefect.fulfilled]: (state, action) => {\n      commentsAdapter.upsertMany(state, action.payload)\n    }\n  }\n})\n\nexport default commentsSlice.reducer\n\nexport const {\n  selectById: selectCommentById,\n  selectIds: selectCommentIds,\n  selectEntities: selectCommentEntities,\n  selectAll: selectAllComments,\n  selectTotal: selectTotalComments,\n} = commentsAdapter.getSelectors(state => state.comments)\n\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst tokenSlice = createSlice({\n  name: 'token',\n  initialState: '',\n  reducers: {\n    addToken(state, action) {\n      return action.payload\n    }\n  }\n})\n\nexport const { addToken } = tokenSlice.actions\n\nexport default tokenSlice.reducer\n\nexport const selectToken = state => state.token","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport userService from '../services/users'\n\n// figure out logic in assigning an \"UNASSIGNED ROLE\" to authenticated user\n\nconst initialState = {\n  data: {},\n  status: '',\n  error: null\n}\n\nexport const fetchAuthenticatedUser = createAsyncThunk(\n  'authenticatedUser/fetch',\n  async () => {\n    const response = await userService.getAuthenticatedUser()\n    return response.data\n  }\n)\n\nconst authenticatedUserSlice = createSlice({\n  name: 'authUser',\n  initialState: initialState,\n  extraReducers: {\n    [fetchAuthenticatedUser.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchAuthenticatedUser.fulfilled]: (state, action) => {\n      const data = action.payload ? action.payload : { role: \"UNASSIGNED\" }\n\n      state.status = 'fulfilled'\n      state.data = data\n    },\n    [fetchAuthenticatedUser.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    }\n  }\n})\n\nexport default authenticatedUserSlice.reducer\n\nexport const selectAuthUser = state => state.authUser.data","import { createSlice } from '@reduxjs/toolkit'\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: 'NONE',\n  reducers: {\n    changeFilter(state, action) {\n      return action.payload\n    }\n  }\n})\n\nexport const { changeFilter } = filterSlice.actions\n\nexport default filterSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\n\nimport projectsReducer from './features/projects/projectsSlice'\nimport usersReducer from './features/users/usersSlice'\nimport defectsReducer from './features/defects/defectsSlice'\nimport commentsReducer from './features/comments/commentsSlice'\nimport tokenReducer from './features/tokenSlice'\nimport authUserReducer from './authenticatedUserSlice'\nimport filterSlice from './features/filterSlice'\n\nexport default configureStore({\n  reducer: {\n    token: tokenReducer,\n    authUser: authUserReducer,\n    filter: filterSlice,\n    projects: projectsReducer,\n    users: usersReducer,\n    defects: defectsReducer,\n    comments: commentsReducer\n  }\n})","import React from 'react'\n\nconst Footer = () => (\n  <footer className=\"bg-light p-3 text-center\">\n    <p>\n      Lilian Nguyen\n    </p>\n  </footer>\n)\n\nexport default Footer","import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react'\n\nconst SignupButton = () => {\n  const { loginWithRedirect } = useAuth0()\n  return (\n    <button\n      className=\"btn btn-primary btn-lg\"\n      onClick={() =>\n        loginWithRedirect({\n          screen_hint: \"signup\",\n        })\n      }\n    >\n      Sign Up\n    </button>\n  )\n}\n\nexport default SignupButton","import React from 'react'\nimport logo from '../images/bug-icon.png'\nimport { useAuth0 } from '@auth0/auth0-react'\n\nimport SignupButton from './SignupButton'\n\nconst Hero = () => {\n  const { isAuthenticated } = useAuth0()\n\n  let content = isAuthenticated\n    ? <div></div>\n    : <SignupButton />\n\n  return (\n    <div className=\"text-center hero\">\n      <img className=\"mb-3 app-logo\" src={logo} alt=\"React logo\" width=\"1000\" />\n      <h1 className=\"mb-4\">Defect Tracker (Demo!)</h1>\n      <p className=\"lead mb-5\">\n        Track, manage, and maintain defects for all your software applications.\n    </p>\n      {content}\n    </div>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nconst loadingImg =\n  'https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg'\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loadingImg} alt=\"Loading...\" />\n  </div>\n)\n\nexport default Loading\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst AdminNav = () => (\n  <div className='navbar-nav mr-auto'>\n    <NavLink\n      to='/'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Home\n      </NavLink>\n    <NavLink\n      to='/projects'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Projects\n      </NavLink>\n    <NavLink\n      to='/users'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Users\n      </NavLink>\n    <NavLink\n      to='/defects'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Defects\n      </NavLink>\n  </div>\n)\n\n\nexport default AdminNav","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst AssignedProjectNav = () => (\n  <div className='navbar-nav mr-auto'>\n    <NavLink\n      to='/'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Home\n      </NavLink>\n    <NavLink\n      to='/projects'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Assigned Project\n      </NavLink>\n    <NavLink\n      to='/defects'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Defects\n      </NavLink>\n  </div>\n)\n\nexport default AssignedProjectNav","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst UnauthenticatedNav = () => (\n  <div className='navbar-nav mr-auto'>\n    <NavLink\n      to='/'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Home\n      </NavLink>\n  </div>\n)\n\nexport default UnauthenticatedNav","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst UnassignedNav = () => (\n  <div className='navbar-nav mr-auto'>\n    <NavLink\n      to='/'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Home\n      </NavLink>\n    <NavLink\n      to='/signup'\n      exact\n      className='nav-link'\n      activeClassName='router-link-exact-active'\n    >\n      Sign Up\n      </NavLink>\n  </div>\n)\n\n\nexport default UnassignedNav","import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react'\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0()\n\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => loginWithRedirect()}\n    >\n      Log In\n    </button>\n  )\n}\n\nexport default LoginButton","import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react'\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0()\n  return (\n    <button\n      className=\"btn btn-danger\"\n      onClick={() =>\n        logout({\n          returnTo: window.location.origin,\n        })\n      }\n    >\n      Log Out\n    </button>\n  )\n}\n\nexport default LogoutButton","import React from 'react'\n\nimport LoginButton from './LoginButton'\nimport LogoutButton from './LogoutButton'\n\nimport { useAuth0 } from '@auth0/auth0-react'\n\nconst AuthenticationButton = () => {\n  const { isAuthenticated } = useAuth0()\n\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />\n}\n\nexport default AuthenticationButton","import React from 'react'\nimport AuthenticationButton from './AuthenticationButton'\n\nconst AuthNav = () => (\n  <div className=\"navbar-nav ml-auto\">\n    <AuthenticationButton />\n  </div>\n)\n\nexport default AuthNav","const rules = {\n  \"VISITOR\": {\n    static: [\n      \"home-page:visit\",\n      \"visitor-tab:view\"\n    ]\n  },\n  \"UNASSIGNED\": {\n    static: [\n      \"home-page:visit\",\n      \"unassigned-tab:view\",\n      \"sign-up:view\"\n    ]\n  },\n  \"ADMIN\": {\n    static: [\n      \"admin-tabs:view\",\n      \"projects:list\",\n      \"projects:viewOne\",\n      \"projects:create\",\n      \"projects:delete\",\n      \"projects:edit\",\n      \"users:list\",\n      \"users:viewOne\",\n      \"users:create\",\n      \"users:edit\",\n      \"users:delete\",\n      \"admin-defects:list\",\n      \"defects:viewOne\",\n      \"defects:create\",\n      \"defects:edit\",\n      \"defects:assignDev\",\n      \"defects:delete\",\n      \"comments:list\",\n      \"comments:create\",\n      \"comments:edit\",\n      \"comments:delete\",\n      \"admin-dashboard-page:visit\",\n      \"home-page:visit\"\n    ],\n  },\n  \"PROJECT LEAD\": {\n    static: [\n      \"lead-dashboard-page:visit\",\n      \"home-page:visit\",\n      \"assigned-project-tabs:view\",\n      \"assigned-project-defects:list\",\n      \"comments:list\",\n      \"comments:create\",\n      \"comments:delete\",\n    ],\n    dynamic: {\n      \"projects:viewOne\": ({ projectId, userProjectId }) => {\n        if (!projectId || !userProjectId) return false\n        return projectId === userProjectId\n      },\n      \"defects:viewOne\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"defects:create\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"defects:edit\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"defects:assignDev\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"defects:delete\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"comments:edit\": ({ userId, authorId }) => {\n        if (!userId || !authorId) return false\n        return userId === authorId\n      }\n    }\n  },\n  \"PROJECT MEMBER\": {\n    static: [\n      \"member-dashboard-page:visit\",\n      \"home-page:visit\",\n      \"assigned-project-tabs:view\",\n      \"assigned-project-defects:list\",\n      \"comments:list\",\n      \"comments:create\",\n    ],\n    dynamic: {\n      \"projects:viewOne\": ({ projectId, userProjectId }) => {\n        if (!projectId || !userProjectId) return false\n        return projectId === userProjectId\n      },\n      \"assigned-project-defects:list\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"defects:viewOne\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"defects:create\": ({ defectProjectId, userProjectId }) => {\n        if (!defectProjectId || !userProjectId) return false\n        return defectProjectId === userProjectId\n      },\n      \"project-member-defects:edit\": ({ userId, identifierId, assignedDevId }) => {\n        if (!userId || !identifierId) return false\n        if (userId === assignedDevId) return true\n        return userId === identifierId\n      },\n      \"comments:edit\": ({ userId, authorId }) => {\n        if (!userId || !authorId) return false\n        return userId === authorId\n      },\n      \"comments:delete\": ({ userId, authorId }) => {\n        if (!userId || !authorId) return false\n        return userId === authorId\n      }\n    }\n  }\n}\n\nexport default rules ","import rules from '../rbac-rules'\n\nconst check = (rules, role, action, data) => {\n  const permissions = rules[role];\n  if (!permissions) {\n    return false\n  }\n\n  const staticPermissions = permissions.static\n\n  if (staticPermissions && staticPermissions.includes(action)) {\n    return true\n  }\n\n  const dynamicPermissions = permissions.dynamic\n\n  if (dynamicPermissions) {\n    const permissionCondition = dynamicPermissions[action]\n    if (!permissionCondition) {\n      return false\n    }\n    return permissionCondition(data)\n  }\n\n  return false\n}\n\nconst Can = props => {\n  let role = props.role ? props.role : \"VISITOR\"\n\n  return (\n    check(rules, role, props.perform, props.data)\n      ? props.yes()\n      : props.no()\n  )\n}\n\nCan.defaultProps = {\n  yes: () => null,\n  no: () => null\n}\n\nexport default Can ","import React from 'react'\nimport AdminNav from './AdminNav'\nimport AssignedProjectNav from './AssignedProjectNav'\nimport UnauthenticatedNav from './UnauthenticatedNav'\nimport UnassignedNav from './UnassignedNav'\nimport AuthNav from './AuthNav'\nimport Can from './Can'\n\nimport { useSelector } from 'react-redux'\n\nconst Navbar = () => {\n  const authUser = useSelector(state => state.authUser.data)\n\n  return (\n    <div className=\"nav-container mb-3\">\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <div className=\"container\">\n          <Can\n            role={authUser.role}\n            perform=\"admin-tabs:view\"\n            yes={() => <AdminNav />}\n          />\n          <Can\n            role={authUser.role}\n            perform=\"assigned-project-tabs:view\"\n            yes={() => <AssignedProjectNav />}\n          />\n          <Can\n            role={authUser.role}\n            perform=\"visitor-tab:view\"\n            yes={() => <UnauthenticatedNav />}\n          />\n          <Can\n            role={authUser.role}\n            perform=\"unassigned-tab:view\"\n            yes={() => <UnassignedNav />}\n          />\n          <AuthNav />\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom'\n\nconst HomeContent = () => (\n  <div className=\"next-steps container\">\n    <h2 className=\"my-5 text-center\">There are three roles.</h2>\n\n    <div className=\"row\">\n      <div className=\"col-md-4 mb-4\">\n        <h6 className=\"mb-3\">\n          ADMINISTRATOR\n        </h6>\n        <p>\n          For this demo, you'll automatically be assigned this role when signing up.\n          You can do it all: manage projects, users and defects across multiple projects.\n          Only thing you can't do is update/delete other admins.\n        </p>\n      </div>\n\n      <div className=\"col-md-4 mb-4\">\n        <h6 className=\"mb-3\">\n          <Link >\n            <FontAwesomeIcon icon={faLink} className=\"mr-2\" />\n            PROJECT LEAD\n          </Link>\n        </h6>\n        <p>Click the above link to log into a Project Lead account.</p>\n        <p><b>Password:</b> project-lead</p>\n        <p>\n          Project Leads have access to their one assigned project. Within their domain,\n          they are able to update (and delete!) any defect, as well as carry the responsibility\n          to assign developers to certain defects.\n        </p>\n      </div>\n\n      <div className=\"col-md-4 mb-4\">\n        <h6 className=\"mb-3\">\n          <Link >\n            <FontAwesomeIcon icon={faLink} className=\"mr-2\" />\n            PROJECT MEMBER\n          </Link>\n        </h6>\n        <p>Click the above link to log into a Project Member account.</p>\n        <p><b>Password:</b> project-member</p>\n        <p>\n          Project Members only have access to their one assigned project. They are able\n          to view all the defects within their project, but can only edit those they've\n          personally made or been assigned.\n        </p>\n      </div>\n\n    </div>\n  </div>\n)\n\nexport default HomeContent","import React, { Fragment } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport Can from '../components/Can'\nimport Hero from '../components/Hero'\nimport HomeContent from '../components/HomeContent'\n\nconst HomePage = () => (\n  <Fragment>\n    <Hero />\n    <hr />\n    <HomeContent />\n  </Fragment>\n)\n\nconst Home = () => {\n  const authUser = useSelector(({ authUser }) => authUser.data)\n\n  if (authUser.role === 'UNASSIGNED') {\n    return <Redirect to='/signup' />\n  }\n\n  return (\n    <Can\n      role={authUser.role}\n      perform=\"home-page:visit\"\n      yes={() => <HomePage />}\n    />\n  )\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport { addNewProject } from './projectsSlice'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  Grid,\n  Button,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@material-ui/core'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\n\nconst AddProjectForm = ({ open, setOpen }) => {\n  const dispatch = useDispatch()\n\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [startDate, setStartDate] = useState(new Date())\n  const [targetEndDate, setTargetEndDate] = useState(new Date())\n\n  const addProject = async (event) => {\n    event.preventDefault()\n\n    const newObject = {\n      title,\n      description,\n      startDate,\n      targetEndDate,\n    }\n    dispatch(addNewProject(newObject))\n\n    setTitle('')\n    setDescription('')\n    setStartDate(new Date())\n    setTargetEndDate(new Date())\n    setOpen(false)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"add-project-label\">\n        <form onSubmit={addProject}>\n          <DialogTitle id=\"add-project-label\">Add New Project</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"title\"\n                  label=\"Title\"\n                  value={title}\n                  onChange={e => setTitle(e.target.value)}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"projectDescription\"\n                  label=\"Description\"\n                  value={description}\n                  onChange={e => setDescription(e.target.value)}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    required\n                    label=\"Start Date\"\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"startDateInput\"\n                    value={startDate}\n                    onChange={date => setStartDate(date)}\n                    fullWidth\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item xs={12}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    required\n                    disableToolbar\n                    label='Target End Date'\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"targetEndDateInput\"\n                    value={targetEndDate}\n                    onChange={date => setTargetEndDate(date)}\n                    fullWidth\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Submit\n          </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  )\n}\n\nAddProjectForm.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired\n}\n\nexport default AddProjectForm","import React, { forwardRef } from 'react'\nimport {\n  AddBox,\n  ArrowDownward,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n  Clear,\n  DeleteOutline,\n  Edit,\n  FilterList,\n  FirstPage,\n  LastPage,\n  Remove,\n  SaveAlt,\n  Search,\n  ViewColumn\n} from '@material-ui/icons'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n}\n\nexport default tableIcons","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MaterialTable from 'material-table'\nimport tableIcons from '../../../components/tableIcons'\nimport { Link } from 'react-router-dom'\n\nconst ProjectTable = ({ data }) => (\n  <MaterialTable\n    title='Projects'\n    data={data}\n    icons={tableIcons}\n    columns={[\n      {\n        title: 'Id',\n        field: 'id',\n        render: rowData => <Link to={`/projects/${rowData.id}`}>{rowData.id}</Link>,\n        maxWidth: 50\n      },\n      { title: 'Title', field: 'title', maxWidth: 100 },\n      { title: 'Description', field: 'description' },\n      { title: 'Start Date', field: 'startDate', maxWidth: 100 },\n      { title: 'Target End Date', field: 'targetEndDate', maxWidth: 100 },\n      { title: 'Actual End Date', field: 'actualEndDate', maxWidth: 100 },\n    ]}\n  />\n)\n\nProjectTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default ProjectTable","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport _ from 'lodash'\nimport { selectAllProjects } from './projectsSlice'\nimport { Grid } from '@material-ui/core'\nimport { Button } from 'react-bootstrap'\n\nimport AddProjectForm from './AddProjectForm'\nimport ProjectTable from './ProjectTable'\n\nconst ProjectList = () => {\n  const projects = useSelector(selectAllProjects)\n  const mutableProjects = _.cloneDeep(projects)\n\n  const [formOpen, setFormOpen] = useState(false)\n\n  return (\n    <div className=\"container\">\n      <Grid container spacing={3}>\n        <Grid item container justify=\"flex-end\" xs={12}>\n          <Button\n            variant=\"primary\"\n            onClick={() => setFormOpen(true)}\n            size=\"sm\"\n            style={{ height: 40 }}\n          >\n            Add Project\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <AddProjectForm\n            open={formOpen}\n            setOpen={setFormOpen}\n          />\n          <ProjectTable data={mutableProjects} />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nimport Can from '../components/Can'\nimport ProjectList from '../app/features/projects/ProjectList'\n\nconst Projects = () => {\n  const authUser = useSelector(({ authUser }) => authUser.data)\n  const authStatus = useSelector(({ authUser }) => authUser.status)\n\n  let assignedProject\n\n  if (authStatus === 'fulfilled') {\n    assignedProject = authUser.projectId\n  }\n\n  let content =\n    assignedProject\n      ? <Redirect\n        to={`projects/${assignedProject}`}\n      />\n      : <Can\n        role={authUser.role}\n        perform=\"projects:list\"\n        yes={() => <ProjectList />}\n        no={() => <div>You do not have permission to view this page.</div>}\n      />\n  return content\n}\n\nexport default Projects","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectAllProjects } from '../projects/projectsSlice'\nimport { changeFilter } from '../filterSlice'\nimport {\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Select\n} from '@material-ui/core'\n\n\nconst DefectFilter = () => {\n  const [value, setValue] = useState('NONE')\n  const dispatch = useDispatch()\n  const projects = useSelector(selectAllProjects)\n\n  const handleChange = (event) => {\n    dispatch(changeFilter(event.target.value))\n    setValue(event.target.value)\n  }\n\n  return (\n    <FormControl variant=\"outlined\" style={{ 'minWidth': 200 }}>\n      <InputLabel id=\"choose-project-label\">Choose Project</InputLabel>\n      <Select\n        labelId=\"choose-project-label\"\n        label=\"Choose Project\"\n        id=\"projectFilter\"\n        value={value}\n        onChange={handleChange}\n      >\n        <MenuItem value='NONE'>\n          <em>None</em>\n        </MenuItem>\n        {\n          projects.map(p =>\n            <MenuItem\n              key={p.id}\n              value={p.id}\n            >\n              {p.title}\n            </MenuItem>\n          )\n        }\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default DefectFilter","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MaterialTable from 'material-table'\nimport tableIcons from '../../../components/tableIcons'\nimport { Link } from 'react-router-dom'\n\nconst DefectTable = ({ data, projectTitle }) => {\n  return (\n    <MaterialTable\n      title={`Project: ${projectTitle}`}\n      data={data}\n      icons={tableIcons}\n      columns={[\n        {\n          title: 'Id',\n          field: 'id',\n          render: rowData => <Link to={`/defects/${rowData.id}`}>{rowData.id}</Link>,\n          maxWidth: 50\n        },\n        { title: 'Status', field: 'status', maxWidth: 70 },\n        { title: 'Summary', field: 'summary' },\n        { title: 'Priority', field: 'priority', maxWidth: 70 },\n        {\n          title: 'Identifier',\n          field: 'identifier',\n        },\n        {\n          title: 'Assigned Developer',\n          field: 'assignedDev',\n        },\n        { title: 'Identified Date', field: 'dateIdentified', maxWidth: 100 },\n        { title: 'Target Resolution Date', field: 'targetResDate', maxWidth: 100 },\n      ]}\n      options={{\n        pageSize: 20\n      }\n      }\n    />\n  )\n}\n\nDefectTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default DefectTable","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addNewDefect } from './defectsSlice'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  Button,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle\n} from '@material-ui/core'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\n\nconst AddDefectForm = ({ open, setOpen, projectId, projectTitle }) => {\n  const dispatch = useDispatch()\n\n  const [summary, setSummary] = useState('')\n  const [description, setDescription] = useState('')\n  const [priority, setPriority] = useState('')\n  const [dateIdentified, setDateIdentified] = useState(new Date())\n  const [targetResDate, setTargetResDate] = useState(null)\n\n  const handleClose = () => {\n    setSummary('')\n    setDescription('')\n    setPriority('')\n    setDateIdentified(new Date())\n    setTargetResDate(null)\n    setOpen(false)\n  }\n\n  const addDefect = (event) => {\n    event.preventDefault()\n\n    const newValues = {\n      summary,\n      description,\n      priority,\n      dateIdentified,\n      targetResDate,\n      projectId\n    }\n\n    dispatch(addNewDefect(newValues))\n    setSummary('')\n    setDescription('')\n    setPriority('')\n    setDateIdentified(new Date())\n    setTargetResDate(null)\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\" aria-labelledby=\"add-defect-label\">\n        <form onSubmit={addDefect}>\n          <DialogTitle id=\"add-defect-label\"><b>Associated Project:</b> {projectTitle}</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoFocus\n                  id=\"summary\"\n                  label=\"Summary\"\n                  value={summary}\n                  onChange={(event) => setSummary(event.target.value)}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"description\"\n                  multiline\n                  label=\"Description\"\n                  value={description}\n                  fullWidth\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    clearable\n                    label=\"Date Identified\"\n                    format=\"MM/dd/yyyy\"\n                    value={dateIdentified}\n                    onChange={date => setDateIdentified(date)}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                    fullWidth\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    clearable\n                    label=\"Target Resolution Date\"\n                    format=\"MM/dd/yyyy\"\n                    value={targetResDate}\n                    onChange={date => setTargetResDate(date)}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                    fullWidth\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl\n                  fullWidth\n                >\n                  <InputLabel shrink id=\"priority-input-label\">\n                    Priority\n                  </InputLabel>\n                  <Select\n                    labelId=\"priority-input-label\"\n                    id=\"priority\"\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                  >\n                    <MenuItem value=''>None</MenuItem>\n                    <MenuItem value='Low'>Low</MenuItem>\n                    <MenuItem value='Medium'>Medium</MenuItem>\n                    <MenuItem value='High'>High</MenuItem>\n                    <MenuItem value='Immediate'>Immediate</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Submit\n          </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AddDefectForm","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport _ from 'lodash'\nimport { fetchDefectsByProject } from './defectsSlice'\nimport { selectProjectById, selectDefectsByProjectId } from '../projects/projectsSlice'\nimport { Grid, Typography } from '@material-ui/core'\nimport { Button } from 'react-bootstrap'\n\nimport DefectFilter from './DefectFilter'\nimport DefectTable from './DefectTable'\nimport AddDefectForm from './AddDefectForm'\n\nconst AdminDefectList = () => {\n  const dispatch = useDispatch()\n\n  const filter = useSelector(({ filter }) => filter)\n  const project = useSelector(state => selectProjectById(state, filter))\n  const defects = useSelector(selectDefectsByProjectId(filter))\n  const mutableDefects = _.cloneDeep(defects)\n\n  useEffect(() => {\n    if (filter !== 'NONE') {\n      dispatch(fetchDefectsByProject(filter))\n    }\n  }, [filter, dispatch])\n\n  const [defectFormOpen, setDefectFormOpen] = useState(false)\n\n  let content\n\n  if (filter === 'NONE') {\n    content =\n      <div className=\"container\">\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" gutterBottom>\n              Choose project to view defects\n          </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <DefectFilter />\n          </Grid>\n        </Grid>\n      </div>\n  } else {\n\n    let projectId = project ? project.id : ''\n    let projectTitle = project ? project.title : ''\n\n    content =\n      <div>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <DefectFilter />\n          </Grid>\n          <Grid item container xs={6} justify=\"flex-end\">\n            <Button\n              variant=\"primary\"\n              onClick={() => setDefectFormOpen(true)}\n              size=\"sm\"\n              style={{ height: 40 }}\n            >\n              Add Defect\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <DefectTable\n              data={mutableDefects}\n              projectTitle={projectTitle}\n            />\n            <AddDefectForm\n              open={defectFormOpen}\n              setOpen={setDefectFormOpen}\n              projectId={projectId}\n              projectTitle={projectTitle}\n            />\n          </Grid>\n        </Grid>\n      </div>\n  }\n\n  return content\n}\n\nexport default AdminDefectList","import React, { useState, useEffect } from 'react'\nimport _ from 'lodash'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { addToken } from '../tokenSlice'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchDefectsByProject } from './defectsSlice'\nimport { selectProjectById, selectDefectsByProjectId } from '../projects/projectsSlice'\nimport { Grid } from '@material-ui/core'\nimport { Button } from 'react-bootstrap'\n\nimport Can from '../../../components/Can'\nimport DefectTable from './DefectTable'\nimport AddDefectForm from './AddDefectForm'\n\nconst SingleProjectDefectList = ({ projectId }) => {\n  const dispatch = useDispatch()\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0()\n  const authUser = useSelector(state => state.authUser.data)\n\n  const project = useSelector(state => selectProjectById(state, projectId))\n  const defects = useSelector(selectDefectsByProjectId(projectId))\n  const mutableDefects = _.cloneDeep(defects)\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      getAccessTokenSilently()\n        .then(token => {\n          dispatch(addToken(token))\n          dispatch(fetchDefectsByProject(projectId))\n        })\n    }\n  }, [isAuthenticated, getAccessTokenSilently, dispatch, projectId])\n\n  const [defectFormOpen, setDefectFormOpen] = useState(false)\n\n  let projectTitle = project ? project.title : ''\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item container xs={12} justify=\"flex-end\">\n          <Can\n            role={authUser.role}\n            perform=\"defects:create\"\n            data={{\n              defectProjectId: projectId,\n              userProjectId: authUser.projectId\n            }}\n            yes={() =>\n              <Button\n                variant=\"primary\"\n                onClick={() => setDefectFormOpen(true)}\n                size=\"sm\"\n                style={{ height: 40 }}\n              >\n                Add Defect\n                </Button>\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <DefectTable\n            data={mutableDefects}\n            projectTitle={projectTitle}\n          />\n          <AddDefectForm\n            open={defectFormOpen}\n            setOpen={setDefectFormOpen}\n            projectId={projectId}\n            projectTitle={projectTitle}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default SingleProjectDefectList","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Can from '../components/Can'\nimport AdminDefectList from '../app/features/defects/AdminDefectList'\nimport SingleProjectDefectList from '../app/features/defects/SingleProjectDefectList'\n\nconst Defects = () => {\n  const authUser = useSelector(({ authUser }) => authUser.data)\n\n  return (\n    <div>\n      <Can\n        role={authUser.role}\n        perform=\"admin-defects:list\"\n        yes={() => <AdminDefectList />}\n      />\n      <Can\n        role={authUser.role}\n        perform=\"assigned-project-defects:list\"\n        yes={() => <SingleProjectDefectList projectId={authUser.projectId} />}\n      />\n    </div>\n  )\n}\n\nexport default Defects","import React from 'react'\nimport MaterialTable from 'material-table'\nimport tableIcons from '../../../components/tableIcons'\n\nconst UserTable = ({ data, title }) => {\n  return (\n    <MaterialTable\n      title={title}\n      data={data}\n      icons={tableIcons}\n      columns={[\n        { title: 'Id', field: 'id', maxWidth: 50 },\n        { title: 'Name', field: 'name' },\n        { title: 'Email', field: 'email' },\n        { title: 'Role', field: 'role' },\n        { title: 'Assigned Project', field: 'projectId' }\n      ]}\n    />\n  )\n}\n\nexport default UserTable","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport _ from 'lodash'\nimport { selectAllUsers } from '../app/features/users/usersSlice'\n\nimport Can from '../components/Can'\nimport UserTable from '../app/features/users/UserTable'\n\n// Need to write logic merging project and user data \nconst Users = () => {\n  const authUser = useSelector(({ authUser }) => authUser.data)\n  const users = useSelector(selectAllUsers)\n  const mutableUsers = _.cloneDeep(users)\n\n  return (\n    <Can\n      role={authUser.role}\n      perform=\"users:list\"\n      yes={() =>\n        <div className=\"container\">\n          <UserTable\n            data={mutableUsers}\n            title=\"All Users\"\n          />\n        </div>\n      }\n      no={() => <div>You do not have permission to visit this page.</div>}\n    />\n  )\n}\n\nexport default Users\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router-dom'\nimport { withAuthenticationRequired } from '@auth0/auth0-react'\nimport { Loading } from '../components/index'\n\nconst ProtectedRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />\n    })}\n    {...args}\n  />\n)\n\nProtectedRoute.propTypes = {\n  component: PropTypes.elementType.isRequired\n}\nexport default ProtectedRoute","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateDefect } from './defectsSlice'\nimport { selectProjectById } from '../projects/projectsSlice'\nimport { makeStyles } from '@material-ui/core/styles'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  Button,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport Can from '../../../components/Can'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiFormLabel-root\": {\n      color: \"#002884\",\n    },\n  },\n}))\n\nconst EditDefectForm = ({ defect, readOnly, setReadOnly, identifier, dev, users }) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const authUser = useSelector(state => state.authUser.data)\n\n  const project = useSelector(state => selectProjectById(state, defect.projectId))\n  const fieldUsers = [...users, { id: null }]\n\n  let projectTitle = project ? project.title : ''\n  let devObject = dev ? dev : { id: null }\n\n  const [summary, setSummary] = useState(defect.summary)\n  const [assignedDev, setAssignedDev] = useState(devObject)\n  const [description, setDescription] = useState(defect.description)\n  const [status, setStatus] = useState(defect.status)\n  const [priority, setPriority] = useState(defect.priority)\n  const [dateIdentified, setDateIdentified] = useState(defect.dateIdentified)\n  const [targetResDate, setTargetResDate] = useState(defect.targetResDate)\n  const [actualResDate, setActualResDate] = useState(defect.actualResolutionDate)\n  const [progress, setProgress] = useState(defect.progress)\n\n  const handleSubmitEdit = (event) => {\n    event.preventDefault()\n\n    const updateValues = {\n      ...defect,\n      summary,\n      description,\n      status,\n      priority,\n      dateIdentified,\n      targetResDate,\n      actualResDate,\n      progress,\n      assignedDevId: assignedDev.id\n    }\n    dispatch(updateDefect(updateValues))\n    setReadOnly()\n  }\n\n  const handleCancelEdit = () => {\n    setReadOnly()\n    setSummary(defect.summary)\n    setDescription(defect.description)\n    setStatus(defect.status)\n    setAssignedDev(defect.assignedDev)\n    setPriority(defect.priority)\n    setDateIdentified(defect.dateIdentified)\n    setTargetResDate(defect.targetResolutionDate)\n    setActualResDate(defect.actualResDate)\n    setProgress(defect.progress)\n  }\n\n  return (\n    <form onSubmit={handleSubmitEdit}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n        </Grid>\n\n        <Grid item xs={12} md={9}>\n          <TextField\n            id=\"summary\"\n            label=\"Summary\"\n            value={summary}\n            InputProps={{\n              readOnly: readOnly,\n            }}\n            fullWidth\n            className={classes.root}\n            onChange={(event) => setSummary(event.target.value)}\n            required\n          />\n        </Grid>\n\n        <Grid item xs={6} md={3}>\n          <FormControl\n            fullWidth\n          >\n            <InputLabel style={{ color: \"#002884\" }} shrink id=\"status-input-label\">\n              Status\n            </InputLabel>\n            <Select\n              labelId=\"status-input-label\"\n              id=\"status\"\n              value={status}\n              onChange={(e) => setStatus(e.target.value)}\n              placeholder={status}\n              inputProps={{\n                readOnly: readOnly,\n              }}\n            >\n              <MenuItem value='OPEN'>OPEN</MenuItem>\n              <MenuItem value='CLOSED'>CLOSED</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={6} md={3}>\n          <Can\n            perform=\"defects:assignDev\"\n            data={{\n              defectProjectId: defect.projectId,\n              userProjectId: authUser.projectId\n            }}\n            yes={() =>\n              <Autocomplete\n                style={{ marginTop: -16 }}\n                id=\"user-select\"\n                options={fieldUsers}\n                value={devObject}\n                onChange={(e, newValue) => {\n                  newValue ? setAssignedDev(newValue) : setAssignedDev({ id: null })\n                }}\n                getOptionLabel={option => option.name ?? ''}\n                getOptionSelected={(option, value) => option.id === value.id}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Assigned Developer\" margin=\"normal\" />\n                )}\n                className={classes.root}\n                readOnly={readOnly}\n              />\n            }\n            no={() =>\n              <Autocomplete\n                style={{ marginTop: -16 }}\n                id=\"user-select\"\n                options={fieldUsers}\n                value={devObject}\n                onChange={(e, newValue) => {\n                  newValue ? setAssignedDev(newValue) : setAssignedDev({ id: null })\n                }}\n                getOptionLabel={option => option.name ?? ''}\n                getOptionSelected={(option, value) => option.id === value.id}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Assigned Developer\" margin=\"normal\" />\n                )}\n                className={classes.root}\n                disabled={!readOnly}\n              />\n            }\n          />\n        </Grid>\n\n        <Grid item xs={6} md={3}>\n          <FormControl\n            fullWidth\n          >\n            <InputLabel style={{ color: \"#002884\" }} shrink id=\"priority-input-label\">\n              Priority\n            </InputLabel>\n            <Select\n              labelId=\"priority-input-label\"\n              id=\"priority\"\n              value={priority}\n              onChange={(e) => setPriority(e.target.value)}\n              placeholder={priority}\n              inputProps={{\n                readOnly: readOnly,\n              }}\n            >\n              <MenuItem value=''>None</MenuItem>\n              <MenuItem value='Low'>Low</MenuItem>\n              <MenuItem value='Medium'>Medium</MenuItem>\n              <MenuItem value='High'>High</MenuItem>\n              <MenuItem value='Immediate'>Immediate</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={6} md={3}>\n          <TextField\n            id=\"identifier\"\n            label=\"Identifier\"\n            value={identifier.name}\n            InputProps={{\n              readOnly: true,\n              disabled: !readOnly\n            }}\n            fullWidth\n            className={classes.root}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <TextField\n            id=\"associated-project\"\n            label=\"Associated Project\"\n            value={projectTitle}\n            InputProps={{\n              readOnly: true,\n              disabled: !readOnly\n            }}\n            fullWidth\n            className={classes.root}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={4}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              clearable\n              label=\"Date Identified\"\n              format=\"MM/dd/yyyy\"\n              value={dateIdentified}\n              onChange={date => setDateIdentified(date)}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n                disabled: readOnly,\n                readOnly: readOnly\n              }}\n              fullWidth\n              className={classes.root}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={4}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              clearable\n              label=\"Target Resolution Date\"\n              format=\"MM/dd/yyyy\"\n              value={targetResDate}\n              onChange={date => setTargetResDate(date)}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n                disabled: readOnly,\n                readOnly: readOnly\n              }}\n              fullWidth\n              className={classes.root}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              clearable\n              label=\"Actual Resolution Date\"\n              format=\"MM/dd/yyyy\"\n              value={actualResDate}\n              onChange={date => setActualResDate(date)}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n                disabled: readOnly,\n                readOnly: readOnly\n              }}\n              fullWidth\n              className={classes.root}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            id=\"description\"\n            multiline\n            label=\"Detailed Description\"\n            value={description}\n            InputProps={{\n              readOnly: readOnly,\n            }}\n            fullWidth\n            className={classes.root}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            id=\"progress\"\n            label=\"Progress\"\n            value={progress}\n            InputProps={{\n              readOnly: readOnly,\n            }}\n            fullWidth\n            onChange={(e) => setProgress(e.target.value)}\n            className={classes.root}\n          />\n        </Grid>\n\n        <Grid container padding={3} spacing={1}>\n          <Grid item xs={6} container justify=\"flex-end\">\n            {\n              !readOnly &&\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                style={{ display: { readOnly } }}\n              >\n                Submit\n            </Button>\n            }\n          </Grid>\n          <Grid item xs={6} container justify=\"flex-start\">\n            {\n              !readOnly &&\n              <Button\n                variant=\"contained\"\n                onClick={handleCancelEdit}\n                color=\"inherit\"\n              >\n                Cancel\n            </Button>\n            }\n          </Grid>\n\n        </Grid>\n      </Grid>\n    </form >\n  )\n}\n\nexport default EditDefectForm","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { addToken } from '../tokenSlice'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { selectDefectById, deleteDefect, fetchDefect } from './defectsSlice'\nimport { selectAllUsers } from '../users/usersSlice'\nimport { Fab, Grid } from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport Can from '../../../components/Can'\nimport Loading from '../../../components/Loading'\nimport EditDefectForm from './EditDefectForm'\n\nconst Defect = () => {\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0()\n  const authUser = useSelector(state => state.authUser.data)\n\n  const id = useParams().id\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const defect = useSelector(state => selectDefectById(state, Number(id)))\n  const defectStatus = useSelector(({ defects }) => defects.status)\n  const defectError = useSelector(({ defects }) => defects.error)\n  const users = useSelector(selectAllUsers)\n  const userStatus = useSelector(({ users }) => users.status)\n\n  const [readOnly, setReadOnly] = useState(true)\n\n  const showWhenReadOnly = { display: readOnly ? '' : 'none' }\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      getAccessTokenSilently()\n        .then(token => {\n          dispatch(addToken(token))\n          dispatch(fetchDefect(id))\n        })\n    }\n  }, [id, dispatch, getAccessTokenSilently, isAuthenticated])\n\n  const handleReadOnly = () => {\n    setReadOnly(!readOnly)\n  }\n\n  const handleDelete = () => {\n    const deleteInfo = {\n      id,\n      projectId: defect.projectId\n    }\n    dispatch(deleteDefect(deleteInfo))\n    if (deleteDefect.fulfilled) {\n      history.push('/defects')\n    }\n  }\n\n  let content\n\n  if (defectStatus === 'loading') {\n    content = <Loading />\n\n  } else if (defectStatus === 'succeeded' && userStatus === 'succeeded') {\n    const identifier = users.find(user => user.id === defect.identifierId)\n    const dev = users.find(user => user.id === defect.assignedDevId)\n\n    content =\n      <div className=\"container\">\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <h3>Defect #{id}</h3>\n          </Grid>\n          <Grid item container justify=\"flex-end\" xs={6} spacing={2}>\n            <Can\n              role={authUser.role}\n              perform=\"defects:edit\"\n              data={{\n                defectProjectId: defect.projectId,\n                userProjectId: authUser.projectId\n              }}\n              yes={() =>\n                <Fab\n                  onClick={handleReadOnly}\n                  color=\"primary\"\n                  aria-label=\"edit\"\n                  size=\"medium\"\n                  style={showWhenReadOnly}\n                >\n                  <EditIcon />\n                </Fab>\n              }\n            />\n            <Can\n              role={authUser.role}\n              perform=\"project-member-defects:edit\"\n              data={{\n                userId: authUser.id,\n                identifierId: defect.identifierId,\n                assignedDevId: defect.assignedDevId\n              }}\n              yes={() =>\n                <Fab\n                  onClick={handleReadOnly}\n                  color=\"primary\"\n                  aria-label=\"edit\"\n                  size=\"medium\"\n                  style={showWhenReadOnly}\n                >\n                  <EditIcon />\n                </Fab>\n              }\n            />\n            <div style={{ width: 10 }}></div>\n            <Can\n              role={authUser.role}\n              perform=\"defects:delete\"\n              data={{\n                defectProjectId: defect.projectId,\n                userProjectId: authUser.projectId\n              }}\n              yes={() =>\n                <Fab onClick={handleDelete} color=\"secondary\" aria-label=\"delete\" size=\"medium\">\n                  <DeleteIcon />\n                </Fab>\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <EditDefectForm\n              defect={defect}\n              readOnly={readOnly}\n              setReadOnly={handleReadOnly}\n              identifier={identifier}\n              dev={dev}\n              users={users}\n            />\n          </Grid>\n        </Grid>\n      </div>\n  } else if (defectStatus === 'failed') {\n    content = <div>{defectError}</div>\n  }\n\n  let defectProject = defect ? defect.projectId : null\n\n  return (\n    <Can\n      role={authUser.role}\n      perform=\"defects:viewOne\"\n      data={{\n        defectProjectId: defectProject,\n        userProjectId: authUser.projectId\n      }}\n      yes={() => <div>{content}</div>}\n      no={() =>\n        <div>You do not have permission to view this page.</div>\n      }\n    />\n  )\n}\n\nexport default Defect","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateProject } from './projectsSlice'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\nconst EditProjectForm = ({ project, readOnly, setReadOnly }) => {\n  const dispatch = useDispatch()\n\n  const [title, setTitle] = useState(project.title)\n  const [description, setDescription] = useState(project.description)\n  const [startDate, setStartDate] = useState(project.startDate)\n  const [targetEndDate, setTargetEndDate] = useState(project.targetEndDate)\n  const [actualEndDate, setActualEndDate] = useState(project.actualEndDate)\n\n  const handleSubmitEdit = (event) => {\n    event.preventDefault()\n    const updateValues = {\n      id: project.id,\n      title,\n      description,\n      startDate,\n      targetEndDate,\n      actualEndDate\n    }\n\n    dispatch(updateProject(updateValues))\n    setReadOnly()\n  }\n\n  const handleCancelEdit = () => {\n    setReadOnly()\n    setTitle(project.title)\n    setDescription(project.description)\n    setStartDate(project.startDate)\n    setTargetEndDate(project.targetEndDate)\n    setActualEndDate(project.actualEndDate)\n  }\n\n  return (\n    <form onSubmit={handleSubmitEdit}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            id=\"title\"\n            label=\"Project Title\"\n            value={title}\n            InputProps={{\n              readOnly: readOnly,\n              disableUnderline: readOnly\n            }}\n            fullWidth\n            onChange={(event) => setTitle(event.target.value)}\n            required\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"description\"\n            multiline\n            label=\"Description\"\n            value={description}\n            InputProps={{\n              readOnly: readOnly,\n              disableUnderline: readOnly\n            }}\n            fullWidth\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              required\n              clearable\n              label=\"Start Date\"\n              format=\"MM/dd/yyyy\"\n              value={startDate}\n              onChange={date => setStartDate(date)}\n              inputProps={{\n                readOnly: readOnly,\n                disabled: readOnly\n              }}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n                disabled: readOnly,\n                readOnly: readOnly\n              }}\n              fullWidth\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              required\n              clearable\n              label=\"Target End Date\"\n              format=\"MM/dd/yyyy\"\n              value={targetEndDate}\n              onChange={date => setTargetEndDate(date)}\n              inputProps={{\n                readOnly: readOnly,\n                disabled: readOnly,\n              }}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n                disabled: readOnly,\n                readOnly: readOnly\n              }}\n              fullWidth\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              clearable\n              label=\"Actual End Date\"\n              format=\"MM/dd/yyyy\"\n              value={actualEndDate}\n              onChange={date => setActualEndDate(date)}\n              inputProps={{\n                readOnly: readOnly,\n                disabled: readOnly\n              }}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n                disabled: readOnly,\n                readOnly: readOnly\n              }}\n              fullWidth\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid container padding={3} spacing={1}>\n          <Grid item xs={6} container justify=\"flex-end\">\n            {\n              !readOnly &&\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                style={{ display: { readOnly } }}\n              >\n                Submit\n            </Button>\n            }\n          </Grid>\n          <Grid item xs={6} container justify=\"flex-start\">\n            {\n              !readOnly &&\n              <Button\n                variant=\"contained\"\n                onClick={handleCancelEdit}\n                color=\"inherit\"\n              >\n                Cancel\n            </Button>\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    </form>\n  )\n}\n\nexport default EditProjectForm","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { selectProjectById, selectUsersByProjectId } from './projectsSlice'\nimport { Fab, Grid } from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport Can from '../../../components/Can'\nimport Loading from '../../../components/Loading'\nimport EditProjectForm from './EditProjectForm'\nimport UserTable from '../users/UserTable'\n\nconst Project = ({ id }) => {\n  const authUser = useSelector(({ authUser }) => authUser.data)\n  const project = useSelector(state => selectProjectById(state, id))\n  const users = useSelector(selectUsersByProjectId(id))\n\n  const projectStatus = useSelector(({ projects }) => projects.status)\n\n  const [readOnly, setReadOnly] = useState(true)\n\n  const showWhenReadOnly = { display: readOnly ? '' : 'none' }\n\n  const handleReadOnly = () => {\n    setReadOnly(!readOnly)\n  }\n\n  let content\n\n  if (projectStatus === 'loading') {\n    content = <Loading />\n  } else if (projectStatus === 'succeeded') {\n    content =\n      <div className=\"container\">\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <h3>{project.title}</h3>\n          </Grid>\n          <Grid item container justify=\"flex-end\" xs={6} spacing={2}>\n            <Can\n              role={authUser.role}\n              perform=\"projects:edit\"\n              yes={() =>\n                <Fab\n                  onClick={handleReadOnly}\n                  color=\"primary\"\n                  aria-label=\"edit\"\n                  size=\"medium\"\n                  style={showWhenReadOnly}\n                >\n                  <EditIcon />\n                </Fab>\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <EditProjectForm\n              project={project}\n              readOnly={readOnly}\n              setReadOnly={handleReadOnly}\n            />\n          </Grid>\n          <Grid item xs={12}></Grid>\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <UserTable\n              data={users}\n              title=\"Users in Project\"\n            />\n          </Grid>\n        </Grid>\n      </div>\n  } else if (projectStatus === 'failed') {\n    content = <div>projectError</div>\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  )\n}\n\nconst SingleProject = () => {\n  const authUser = useSelector(state => state.authUser.data)\n  const authStatus = useSelector(state => state.authUser.status)\n\n  const id = Number(useParams().id)\n\n  let assignedProject =\n    authStatus === 'fulfilled'\n      ? authUser.projectId\n      : null\n\n  return (\n    <Can\n      role={authUser.role}\n      perform=\"projects:viewOne\"\n      data={{\n        projectId: id,\n        userProjectId: assignedProject\n      }}\n      yes={() => <Project id={id} />}\n      no={() => <div className=\"container\">You do not have permission to access this page.</div>}\n    />\n  )\n}\n\nexport default SingleProject","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { addNewUser } from './usersSlice'\nimport { fetchAuthenticatedUser } from '../../authenticatedUserSlice'\nimport {\n  Grid,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  DialogContentText\n} from '@material-ui/core'\n\nimport Can from '../../../components/Can'\n\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { user } = useAuth0()\n\n  const [name, setName] = useState('')\n  const [occupation, setOccupation] = useState('')\n\n  function addUser(event) {\n    event.preventDefault()\n\n    const newValues = {\n      name,\n      role: 'ADMIN',\n      email: user.email,\n      occupation\n    }\n\n    console.log(\"🚀 ~ file: UserSignUpForm.js ~ line 36 ~ addUser ~ newValues\", newValues)\n\n    dispatch(addNewUser(newValues))\n      .then(() => {\n        dispatch(fetchAuthenticatedUser())\n      })\n      .then(() => {\n        history.push('/')\n      })\n  }\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={true}\n        aria-labelledby=\"user-signup-label\"\n      >\n        <form onSubmit={addUser}>\n          <DialogTitle id=\"add-user-label\">New User Sign Up</DialogTitle>\n          <DialogContent>\n\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <DialogContentText>\n                  You will automatically be assigned an Admin role upon sign up.\n                </DialogContentText>\n              </Grid>\n\n              <Grid item container justify=\"center\" xs={12}>\n                <TextField\n                  required\n                  id=\"name\"\n                  value={name}\n                  label=\"Name\"\n                  onChange={e => setName(e.target.value)}\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </Grid>\n\n              <Grid container justify=\"center\" item xs={12}>\n                <FormControl\n                  fullWidth\n                >\n                  <InputLabel required shrink id=\"priority-input-label\">\n                    Occupation\n                  </InputLabel>\n                  <Select\n                    required\n                    labelId=\"occupation-input-label\"\n                    id=\"occupation\"\n                    value={occupation}\n                    onChange={(e) => setOccupation(e.target.value)}\n                    placeholder=\"\"\n                  >\n                    <MenuItem value=\"Tester\">Tester</MenuItem>\n                    <MenuItem value=\"Developer\">Developer</MenuItem>\n                    <MenuItem value=\"Manager\">Manager</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item container xs={12} justify=\"center\">\n                <DialogActions>\n                  <Button type=\"submit\" color=\"primary\">\n                    Sign Up\n                  </Button>\n                </DialogActions>\n              </Grid>\n\n            </Grid>\n          </DialogContent>\n        </form>\n      </Dialog>\n    </div>\n  )\n}\n\nconst UserSignUpForm = () => {\n  const authUser = useSelector(({ authUser }) => authUser.data)\n\n  return (\n    <Can\n      role={authUser.role}\n      perform=\"sign-up:view\"\n      yes={() => <SignUpForm />}\n      no={() => <Redirect to=\"/\" />}\n    />\n  )\n}\n\nexport default UserSignUpForm","import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { fetchAuthenticatedUser } from './app/authenticatedUserSlice'\nimport { fetchAllProjects } from './app/features/projects/projectsSlice'\nimport { fetchAllUsers } from './app/features/users/usersSlice'\nimport { addToken } from './app/features/tokenSlice'\nimport { useAuth0 } from '@auth0/auth0-react'\n\nimport { Navbar, Footer, Loading } from './components'\nimport { Home, Projects, Defects, Users } from './views'\nimport ProtectedRoute from './auth/ProtectedRoute'\nimport SingleDefect from './app/features/defects/SingleDefect'\nimport SingleProject from './app/features/projects/SingleProject'\nimport UserSignUpForm from './app/features/users/UserSignUpForm'\n\nimport './app.css'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const { isLoading, isAuthenticated, getAccessTokenSilently, user } = useAuth0()\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      getAccessTokenSilently()\n        .then(token => {\n          dispatch(addToken(token))\n          dispatch(fetchAuthenticatedUser())\n          dispatch(fetchAllProjects())\n          dispatch(fetchAllUsers())\n        })\n    }\n  }, [dispatch, getAccessTokenSilently, isAuthenticated, user])\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  return (\n    <div id=\"app\" className=\"d-flex flex-column h-100\">\n      <Navbar />\n      <div className=\"container-fluid flex-grow-1 flex-shrink-1 mb-5\">\n        <div className=\"mt-3\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <ProtectedRoute exact path=\"/signup\" component={UserSignUpForm} />\n            <ProtectedRoute exact path=\"/projects\" component={Projects} />\n            <ProtectedRoute exact path=\"/projects/:id\" component={SingleProject} />\n            <ProtectedRoute exact path=\"/users\" component={Users} />\n            <ProtectedRoute exact path=\"/defects\" component={Defects} />\n            <ProtectedRoute exact path=\"/defects/:id\" component={SingleDefect} />\n          </Switch>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport { Auth0Provider } from '@auth0/auth0-react'\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE\n\n  const history = useHistory()\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname)\n  }\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  )\n}\n\nAuth0ProviderWithHistory.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Auth0ProviderWithHistory","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport store from './app/store'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Auth0ProviderWithHistory from './auth/Auth0ProviderWithHistory'\n\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}